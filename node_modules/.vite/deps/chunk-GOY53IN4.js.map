{
  "version": 3,
  "sources": ["../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/constants.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/private.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/utils.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-columns.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-scrollbar.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-row.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-data.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/utils.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-styles.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/composables/use-auto-resize.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/use-table.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/tokens.ts", "../../.pnpm/memoize-one@6.0.0/node_modules/memoize-one/dist/memoize-one.esm.js", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/hooks/use-cache.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/defaults.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/hooks/use-wheel.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/props.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/utils.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/components/scrollbar.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/builders/build-list.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/components/fixed-size-list.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/components/dynamic-size-list.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/hooks/use-grid-wheel.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/builders/build-grid.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/components/fixed-size-grid.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/virtual-list/src/components/dynamic-size-grid.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/common.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/row.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/header.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/grid.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/table.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/cell.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/header-cell.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/header-row.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/header-row.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/header.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/row.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/sort-icon.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/expand-icon.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/table-grid.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/main-table.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/left-table.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/right-table.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/row.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/cell.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/header.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/header-cell.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/footer.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/empty/src/img-empty.vue", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/empty/src/empty.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/empty/src/empty.vue", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/empty/index.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/empty.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/renderers/overlay.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/table-v2.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/auto-resizer.ts", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/src/components/auto-resizer.tsx", "../../.pnpm/element-plus@2.3.2_vue@3.2.47/packages/components/table-v2/index.ts"],
  "sourcesContent": ["export enum SortOrder {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport enum Alignment {\n  CENTER = 'center',\n  RIGHT = 'right',\n}\n\nexport enum FixedDir {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport const oppositeOrderMap = {\n  [SortOrder.ASC]: SortOrder.DESC,\n  [SortOrder.DESC]: SortOrder.ASC,\n}\n\nexport const sortOrders = [SortOrder.ASC, SortOrder.DESC] as const\n", "export const placeholderSign = Symbol('placeholder')\n", "import type { CSSProperties } from 'vue'\nimport type { AnyColumns } from '../types'\n\nexport const calcColumnStyle = (\n  column: AnyColumns[number],\n  fixedColumn: boolean,\n  fixed: boolean\n): CSSProperties => {\n  const flex = {\n    flexGrow: 0,\n    flexShrink: 0,\n    ...(fixed\n      ? {}\n      : {\n          flexGrow: column.flexGrow || 0,\n          flexShrink: column.flexShrink || 1,\n        }),\n  }\n\n  if (!fixed) {\n    flex.flexShrink = 1\n  }\n\n  const style = {\n    ...(column.style ?? {}),\n    ...flex,\n    flexBasis: 'auto',\n    width: column.width,\n  }\n\n  if (!fixedColumn) {\n    if (column.maxWidth) style.maxWidth = column.maxWidth\n    if (column.minWidth) style.minWidth = column.minWidth\n  }\n\n  return style\n}\n", "// @ts-nocheck\nimport { computed, unref } from 'vue'\nimport { isObject } from '@element-plus/utils'\nimport { SortOrder, oppositeOrderMap } from '../constants'\nimport { placeholderSign } from '../private'\nimport { calcColumnStyle } from './utils'\n\nimport type { CSSProperties, Ref } from 'vue'\nimport type { TableV2Props } from '../table'\nimport type { AnyColumns, Column, KeyType } from '../types'\n\nfunction useColumns(\n  props: TableV2Props,\n  columns: Ref<AnyColumns>,\n  fixed: Ref<boolean>\n) {\n  const visibleColumns = computed(() => {\n    return unref(columns).filter((column) => !column.hidden)\n  })\n\n  const fixedColumnsOnLeft = computed(() =>\n    unref(visibleColumns).filter(\n      (column) => column.fixed === 'left' || column.fixed === true\n    )\n  )\n\n  const fixedColumnsOnRight = computed(() =>\n    unref(visibleColumns).filter((column) => column.fixed === 'right')\n  )\n\n  const normalColumns = computed(() =>\n    unref(visibleColumns).filter((column) => !column.fixed)\n  )\n\n  const mainColumns = computed(() => {\n    const ret: AnyColumns = []\n\n    unref(fixedColumnsOnLeft).forEach((column) => {\n      ret.push({\n        ...column,\n        placeholderSign,\n      })\n    })\n\n    unref(normalColumns).forEach((column) => {\n      ret.push(column)\n    })\n\n    unref(fixedColumnsOnRight).forEach((column) => {\n      ret.push({\n        ...column,\n        placeholderSign,\n      })\n    })\n\n    return ret\n  })\n\n  const hasFixedColumns = computed(() => {\n    return unref(fixedColumnsOnLeft).length || unref(fixedColumnsOnRight).length\n  })\n\n  const columnsStyles = computed(() => {\n    const _columns = unref(columns)\n\n    return _columns.reduce<Record<Column<any>['key'], CSSProperties>>(\n      (style, column) => {\n        style[column.key] = calcColumnStyle(column, unref(fixed), props.fixed)\n        return style\n      },\n      {}\n    )\n  })\n\n  const columnsTotalWidth = computed(() => {\n    return unref(visibleColumns).reduce(\n      (width, column) => width + column.width,\n      0\n    )\n  })\n\n  const getColumn = (key: KeyType) => {\n    return unref(columns).find((column) => column.key === key)\n  }\n\n  const getColumnStyle = (key: KeyType) => {\n    return unref(columnsStyles)[key]\n  }\n\n  const updateColumnWidth = (column: Column<any>, width: number) => {\n    column.width = width\n  }\n\n  function onColumnSorted(e: MouseEvent) {\n    const { key } = (e.currentTarget as HTMLElement).dataset\n    if (!key) return\n    const { sortState, sortBy } = props\n\n    let order = SortOrder.ASC\n\n    if (isObject(sortState)) {\n      order = oppositeOrderMap[sortState[key]]\n    } else {\n      order = oppositeOrderMap[sortBy.order]\n    }\n\n    props.onColumnSort?.({ column: getColumn(key)!, key, order })\n  }\n\n  return {\n    columns,\n    columnsStyles,\n    columnsTotalWidth,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    hasFixedColumns,\n    mainColumns,\n    normalColumns,\n    visibleColumns,\n\n    getColumn,\n    getColumnStyle,\n    updateColumnWidth,\n    onColumnSorted,\n  }\n}\n\nexport { useColumns }\nexport type UseColumnsReturn = ReturnType<typeof useColumns>\n", "import { ref, unref, watch } from 'vue'\n\nimport type { Ref } from 'vue'\nimport type { Alignment as ScrollStrategy } from '@element-plus/components/virtual-list'\nimport type { TableV2Props } from '../table'\nimport type { TableGridInstance } from '../table-grid'\n\nexport type ScrollPos = { scrollLeft: number; scrollTop: number }\ntype GridInstanceRef = Ref<TableGridInstance | undefined>\n\ntype UseScrollBarProps = {\n  mainTableRef: GridInstanceRef\n  leftTableRef: GridInstanceRef\n  rightTableRef: GridInstanceRef\n\n  onMaybeEndReached: () => void\n}\n\nexport type { ScrollStrategy }\n\nexport const useScrollbar = (\n  props: TableV2Props,\n  {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    onMaybeEndReached,\n  }: UseScrollBarProps\n) => {\n  const scrollPos = ref<ScrollPos>({ scrollLeft: 0, scrollTop: 0 })\n\n  function doScroll(params: ScrollPos) {\n    const { scrollTop } = params\n\n    mainTableRef.value?.scrollTo(params)\n    leftTableRef.value?.scrollToTop(scrollTop)\n    rightTableRef.value?.scrollToTop(scrollTop)\n  }\n\n  // methods\n  function scrollTo(params: ScrollPos) {\n    scrollPos.value = params\n\n    doScroll(params)\n  }\n\n  function scrollToTop(scrollTop: number) {\n    scrollPos.value.scrollTop = scrollTop\n\n    doScroll(unref(scrollPos))\n  }\n\n  function scrollToLeft(scrollLeft: number) {\n    scrollPos.value.scrollLeft = scrollLeft\n\n    mainTableRef.value?.scrollTo?.(unref(scrollPos))\n  }\n\n  function onScroll(params: ScrollPos) {\n    scrollTo(params)\n    props.onScroll?.(params)\n  }\n\n  function onVerticalScroll({ scrollTop }: ScrollPos) {\n    const { scrollTop: currentScrollTop } = unref(scrollPos)\n    if (scrollTop !== currentScrollTop) scrollToTop(scrollTop)\n  }\n\n  function scrollToRow(row: number, strategy: ScrollStrategy = 'auto') {\n    mainTableRef.value?.scrollToRow(row, strategy)\n  }\n\n  // When scrollTop changes, maybe reaching the bottom\n  watch(\n    () => unref(scrollPos).scrollTop,\n    (cur, prev) => {\n      if (cur > prev) onMaybeEndReached()\n    }\n  )\n\n  return {\n    scrollPos,\n\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n  }\n}\n", "import { computed, getCurrentInstance, ref, shallowRef, unref } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { isNumber } from '@element-plus/utils'\nimport { FixedDir } from '../constants'\n\nimport type { Ref } from 'vue'\nimport type { TableV2Props } from '../table'\nimport type {\n  RowExpandParams,\n  RowHeightChangedParams,\n  RowHoverParams,\n} from '../row'\nimport type { FixedDirection, KeyType } from '../types'\nimport type { onRowRenderedParams } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\ntype Heights = Record<KeyType, number>\ntype GridInstanceRef = Ref<TableGridInstance | undefined>\n\ntype UseRowProps = {\n  mainTableRef: GridInstanceRef\n  leftTableRef: GridInstanceRef\n  rightTableRef: GridInstanceRef\n}\n\nexport const useRow = (\n  props: TableV2Props,\n  { mainTableRef, leftTableRef, rightTableRef }: UseRowProps\n) => {\n  const vm = getCurrentInstance()!\n  const { emit } = vm\n  const isResetting = shallowRef(false)\n  const hoveringRowKey = shallowRef<KeyType | null>(null)\n  const expandedRowKeys = ref<KeyType[]>(props.defaultExpandedRowKeys || [])\n  const lastRenderedRowIndex = ref(-1)\n  const resetIndex = shallowRef<number | null>(null)\n  const rowHeights = ref<Heights>({})\n  const pendingRowHeights = ref<Heights>({})\n  const leftTableHeights = shallowRef<Heights>({})\n  const mainTableHeights = shallowRef<Heights>({})\n  const rightTableHeights = shallowRef<Heights>({})\n  const isDynamic = computed(() => isNumber(props.estimatedRowHeight))\n\n  function onRowsRendered(params: onRowRenderedParams) {\n    props.onRowsRendered?.(params)\n\n    if (params.rowCacheEnd > unref(lastRenderedRowIndex)) {\n      lastRenderedRowIndex.value = params.rowCacheEnd\n    }\n  }\n\n  function onRowHovered({ hovered, rowKey }: RowHoverParams) {\n    hoveringRowKey.value = hovered ? rowKey : null\n  }\n\n  function onRowExpanded({\n    expanded,\n    rowData,\n    rowIndex,\n    rowKey,\n  }: RowExpandParams) {\n    const _expandedRowKeys = [...unref(expandedRowKeys)]\n    const currentKeyIndex = _expandedRowKeys.indexOf(rowKey)\n    if (expanded) {\n      if (currentKeyIndex === -1) _expandedRowKeys.push(rowKey)\n    } else {\n      if (currentKeyIndex > -1) _expandedRowKeys.splice(currentKeyIndex, 1)\n    }\n    expandedRowKeys.value = _expandedRowKeys\n\n    emit('update:expandedRowKeys', _expandedRowKeys)\n    props.onRowExpand?.({\n      expanded,\n      rowData,\n      rowIndex,\n      rowKey,\n    })\n    // If this is not controlled, then use this to notify changes\n    props.onExpandedRowsChange?.(_expandedRowKeys)\n  }\n\n  const flushingRowHeights = debounce(() => {\n    isResetting.value = true\n    rowHeights.value = { ...unref(rowHeights), ...unref(pendingRowHeights) }\n    resetAfterIndex(unref(resetIndex)!, false)\n    pendingRowHeights.value = {}\n    // force update\n    resetIndex.value = null\n    mainTableRef.value?.forceUpdate()\n    leftTableRef.value?.forceUpdate()\n    rightTableRef.value?.forceUpdate()\n    vm.proxy?.$forceUpdate()\n    isResetting.value = false\n  }, 0)\n\n  function resetAfterIndex(index: number, forceUpdate = false) {\n    if (!unref(isDynamic)) return\n    ;[mainTableRef, leftTableRef, rightTableRef].forEach((tableRef) => {\n      const table = unref(tableRef)\n      if (table) table.resetAfterRowIndex(index, forceUpdate)\n    })\n  }\n\n  function resetHeights(rowKey: KeyType, height: number, rowIdx: number) {\n    const resetIdx = unref(resetIndex)\n    if (resetIdx === null) {\n      resetIndex.value = rowIdx\n    } else {\n      if (resetIdx > rowIdx) {\n        resetIndex.value = rowIdx\n      }\n    }\n\n    pendingRowHeights.value[rowKey] = height\n  }\n\n  function onRowHeightChange(\n    { rowKey, height, rowIndex }: RowHeightChangedParams,\n    fixedDir: FixedDirection\n  ) {\n    if (!fixedDir) {\n      mainTableHeights.value[rowKey] = height\n    } else {\n      if (fixedDir === FixedDir.RIGHT) {\n        rightTableHeights.value[rowKey] = height\n      } else {\n        leftTableHeights.value[rowKey] = height\n      }\n    }\n\n    const maximumHeight = Math.max(\n      ...[leftTableHeights, rightTableHeights, mainTableHeights].map(\n        (records) => records.value[rowKey] || 0\n      )\n    )\n\n    if (unref(rowHeights)[rowKey] !== maximumHeight) {\n      resetHeights(rowKey, maximumHeight, rowIndex)\n      flushingRowHeights()\n    }\n  }\n\n  return {\n    hoveringRowKey,\n    expandedRowKeys,\n    lastRenderedRowIndex,\n    isDynamic,\n    isResetting,\n    rowHeights,\n\n    resetAfterIndex,\n    onRowExpanded,\n    onRowHovered,\n    onRowsRendered,\n    onRowHeightChange,\n  }\n}\n\nexport type UseRowReturn = ReturnType<typeof useRow>\n", "import { computed, ref, unref, watch } from 'vue'\n\nimport type { TableV2Props } from '../table'\nimport type { KeyType } from '../types'\nimport type { UseRowReturn } from './use-row'\n\ntype UseDataProps = {\n  expandedRowKeys: UseRowReturn['expandedRowKeys']\n  lastRenderedRowIndex: UseRowReturn['lastRenderedRowIndex']\n  resetAfterIndex: UseRowReturn['resetAfterIndex']\n}\n\nexport const useData = (\n  props: TableV2Props,\n  { expandedRowKeys, lastRenderedRowIndex, resetAfterIndex }: UseDataProps\n) => {\n  const depthMap = ref<Record<KeyType, number>>({})\n\n  const flattenedData = computed(() => {\n    const depths: Record<KeyType, number> = {}\n    const { data, rowKey } = props\n\n    const _expandedRowKeys = unref(expandedRowKeys)\n\n    if (!_expandedRowKeys || !_expandedRowKeys.length) return data\n\n    const array: any[] = []\n    const keysSet = new Set()\n    _expandedRowKeys.forEach((x) => keysSet.add(x))\n\n    let copy: any[] = data.slice()\n    copy.forEach((x) => (depths[x[rowKey]] = 0))\n    while (copy.length > 0) {\n      const item = copy.shift()!\n\n      array.push(item)\n      if (\n        keysSet.has(item[rowKey]) &&\n        Array.isArray(item.children) &&\n        item.children.length > 0\n      ) {\n        copy = [...item.children, ...copy]\n        item.children.forEach(\n          (child: any) => (depths[child[rowKey]] = depths[item[rowKey]] + 1)\n        )\n      }\n    }\n\n    depthMap.value = depths\n    return array\n  })\n\n  const data = computed(() => {\n    const { data, expandColumnKey } = props\n    return expandColumnKey ? unref(flattenedData) : data\n  })\n\n  watch(data, (val, prev) => {\n    if (val !== prev) {\n      lastRenderedRowIndex.value = -1\n      resetAfterIndex(0, true)\n    }\n  })\n\n  return {\n    data,\n    depthMap,\n  }\n}\n\nexport type UseDataReturn = ReturnType<typeof useData>\n", "import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n", "import { computed, unref } from 'vue'\nimport { addUnit, isNumber } from '@element-plus/utils'\nimport { enforceUnit, sum } from '../utils'\n\nimport type { CSSProperties } from 'vue'\nimport type { TableV2Props } from '../table'\nimport type { UseColumnsReturn } from './use-columns'\nimport type { UseDataReturn } from './use-data'\n\ntype UseStyleProps = {\n  columnsTotalWidth: UseColumnsReturn['columnsTotalWidth']\n  data: UseDataReturn['data']\n  fixedColumnsOnLeft: UseColumnsReturn['fixedColumnsOnLeft']\n  fixedColumnsOnRight: UseColumnsReturn['fixedColumnsOnRight']\n}\n\nexport const useStyles = (\n  props: TableV2Props,\n  {\n    columnsTotalWidth,\n    data,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n  }: UseStyleProps\n) => {\n  const bodyWidth = computed(() => {\n    const { fixed, width, vScrollbarSize } = props\n    const ret = width - vScrollbarSize\n    return fixed ? Math.max(Math.round(unref(columnsTotalWidth)), ret) : ret\n  })\n\n  const headerWidth = computed(\n    () => unref(bodyWidth) + (props.fixed ? props.vScrollbarSize : 0)\n  )\n\n  const mainTableHeight = computed(() => {\n    const { height = 0, maxHeight = 0, footerHeight, hScrollbarSize } = props\n\n    if (maxHeight > 0) {\n      const _fixedRowsHeight = unref(fixedRowsHeight)\n      const _rowsHeight = unref(rowsHeight)\n      const _headerHeight = unref(headerHeight)\n      const total =\n        _headerHeight + _fixedRowsHeight + _rowsHeight + hScrollbarSize\n\n      return Math.min(total, maxHeight - footerHeight)\n    }\n\n    return height - footerHeight\n  })\n\n  const rowsHeight = computed(() => {\n    const { rowHeight, estimatedRowHeight } = props\n    const _data = unref(data)\n    if (isNumber(estimatedRowHeight)) {\n      return _data.length * estimatedRowHeight\n    }\n\n    return _data.length * rowHeight\n  })\n\n  const fixedTableHeight = computed(() => {\n    const { maxHeight } = props\n    const tableHeight = unref(mainTableHeight)\n    if (isNumber(maxHeight) && maxHeight > 0) return tableHeight\n\n    const totalHeight =\n      unref(rowsHeight) + unref(headerHeight) + unref(fixedRowsHeight)\n\n    return Math.min(tableHeight, totalHeight)\n  })\n\n  const mapColumn = (column: TableV2Props['columns'][number]) => column.width\n\n  const leftTableWidth = computed(() =>\n    sum(unref(fixedColumnsOnLeft).map(mapColumn))\n  )\n\n  const rightTableWidth = computed(() =>\n    sum(unref(fixedColumnsOnRight).map(mapColumn))\n  )\n\n  const headerHeight = computed(() => sum(props.headerHeight))\n\n  const fixedRowsHeight = computed(() => {\n    return (props.fixedData?.length || 0) * props.rowHeight\n  })\n\n  const windowHeight = computed(() => {\n    return unref(mainTableHeight) - unref(headerHeight) - unref(fixedRowsHeight)\n  })\n\n  const rootStyle = computed<CSSProperties>(() => {\n    const { style = {}, height, width } = props\n    return enforceUnit({\n      ...style,\n      height,\n      width,\n    })\n  })\n\n  const footerHeight = computed(() =>\n    enforceUnit({ height: props.footerHeight })\n  )\n\n  const emptyStyle = computed<CSSProperties>(() => ({\n    top: addUnit(unref(headerHeight)),\n    bottom: addUnit(props.footerHeight),\n    width: addUnit(props.width),\n  }))\n\n  return {\n    bodyWidth,\n    fixedTableHeight,\n    mainTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    headerWidth,\n    rowsHeight,\n    windowHeight,\n    footerHeight,\n    emptyStyle,\n    rootStyle,\n    headerHeight,\n  }\n}\n\nexport type UseStyleReturn = ReturnType<typeof useStyles>\n", "import { onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\n\nimport type { AutoResizerProps } from '../auto-resizer'\n\nconst useAutoResize = (props: AutoResizerProps) => {\n  const sizer = ref<HTMLElement>()\n  const width$ = ref(0)\n  const height$ = ref(0)\n\n  let resizerStopper: ReturnType<typeof useResizeObserver>['stop']\n  onMounted(() => {\n    resizerStopper = useResizeObserver(sizer, ([entry]) => {\n      const { width, height } = entry.contentRect\n      const { paddingLeft, paddingRight, paddingTop, paddingBottom } =\n        getComputedStyle(entry.target)\n\n      const left = Number.parseInt(paddingLeft) || 0\n      const right = Number.parseInt(paddingRight) || 0\n      const top = Number.parseInt(paddingTop) || 0\n      const bottom = Number.parseInt(paddingBottom) || 0\n\n      width$.value = width - left - right\n      height$.value = height - top - bottom\n    }).stop\n  })\n\n  onBeforeUnmount(() => {\n    resizerStopper?.()\n  })\n\n  watch([width$, height$], ([width, height]) => {\n    props.onResize?.({\n      width,\n      height,\n    })\n  })\n\n  return {\n    sizer,\n    width: width$,\n    height: height$,\n  }\n}\n\nexport { useAutoResize }\n", "import { computed, ref, shallowRef, toRef, unref, watch } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport {\n  useColumns,\n  useData,\n  useRow,\n  useScrollbar,\n  useStyles,\n} from './composables'\n\nimport type { TableV2Props } from './table'\nimport type { TableGridInstance } from './table-grid'\n\nfunction useTable(props: TableV2Props) {\n  const mainTableRef = ref<TableGridInstance>()\n  const leftTableRef = ref<TableGridInstance>()\n  const rightTableRef = ref<TableGridInstance>()\n  const {\n    columns,\n    columnsStyles,\n    columnsTotalWidth,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    hasFixedColumns,\n    mainColumns,\n\n    onColumnSorted,\n  } = useColumns(props, toRef(props, 'columns'), toRef(props, 'fixed'))\n\n  const {\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n    scrollPos,\n  } = useScrollbar(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n\n    onMaybeEndReached,\n  })\n\n  const {\n    expandedRowKeys,\n    hoveringRowKey,\n    lastRenderedRowIndex,\n    isDynamic,\n    isResetting,\n    rowHeights,\n\n    resetAfterIndex,\n    onRowExpanded,\n    onRowHeightChange,\n    onRowHovered,\n    onRowsRendered,\n  } = useRow(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n  })\n\n  const { data, depthMap } = useData(props, {\n    expandedRowKeys,\n    lastRenderedRowIndex,\n    resetAfterIndex,\n  })\n\n  const {\n    bodyWidth,\n    fixedTableHeight,\n    mainTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    headerWidth,\n    rowsHeight,\n    windowHeight,\n    footerHeight,\n    emptyStyle,\n    rootStyle,\n    headerHeight,\n  } = useStyles(props, {\n    columnsTotalWidth,\n    data,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n  })\n  // state\n  const isScrolling = shallowRef(false)\n\n  // DOM/Component refs\n  const containerRef = ref()\n\n  const showEmpty = computed(() => {\n    const noData = unref(data).length === 0\n\n    return isArray(props.fixedData)\n      ? props.fixedData.length === 0 && noData\n      : noData\n  })\n\n  function getRowHeight(rowIndex: number) {\n    const { estimatedRowHeight, rowHeight, rowKey } = props\n\n    if (!estimatedRowHeight) return rowHeight\n\n    return (\n      unref(rowHeights)[unref(data)[rowIndex][rowKey]] || estimatedRowHeight\n    )\n  }\n\n  function onMaybeEndReached() {\n    const { onEndReached } = props\n    if (!onEndReached) return\n\n    const { scrollTop } = unref(scrollPos)\n\n    const _totalHeight = unref(rowsHeight)\n    const clientHeight = unref(windowHeight)\n\n    const heightUntilEnd =\n      _totalHeight - (scrollTop + clientHeight) + props.hScrollbarSize\n\n    if (\n      unref(lastRenderedRowIndex) >= 0 &&\n      _totalHeight === scrollTop + unref(mainTableHeight) - unref(headerHeight)\n    ) {\n      onEndReached(heightUntilEnd)\n    }\n  }\n\n  // events\n\n  watch(\n    () => props.expandedRowKeys,\n    (val) => (expandedRowKeys.value = val),\n    {\n      deep: true,\n    }\n  )\n\n  return {\n    // models\n    columns,\n    containerRef,\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    // states\n    isDynamic,\n    isResetting,\n    isScrolling,\n    hoveringRowKey,\n    hasFixedColumns,\n    // records\n    columnsStyles,\n    columnsTotalWidth,\n    data,\n    expandedRowKeys,\n    depthMap,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    mainColumns,\n    // metadata\n    bodyWidth,\n    emptyStyle,\n    rootStyle,\n    headerWidth,\n    footerHeight,\n    mainTableHeight,\n    fixedTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    // flags\n    showEmpty,\n\n    // methods\n    getRowHeight,\n\n    // event handlers\n    onColumnSorted,\n    onRowHovered,\n    onRowExpanded,\n    onRowsRendered,\n    onRowHeightChange,\n    // use scrollbars\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n  }\n}\n\nexport { useTable }\n\nexport type UseTableReturn = ReturnType<typeof useTable>\n", "import type { InjectionKey, Ref } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { KeyType } from './types'\n\nexport type TableV2Context = {\n  isScrolling: Ref<boolean>\n  hoveringRowKey: Ref<null | KeyType>\n  isResetting: Ref<boolean>\n  ns: UseNamespaceReturn\n}\n\nexport const TableV2InjectionKey: InjectionKey<TableV2Context> =\n  Symbol('tableV2')\n", "var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n", "import { computed, getCurrentInstance } from 'vue'\nimport { memoize } from 'lodash-unified'\nimport memoOne from 'memoize-one'\n\nimport type { VirtualizedProps } from '../props'\n\nexport const useCache = () => {\n  const vm = getCurrentInstance()!\n\n  const props = vm.proxy!.$props as VirtualizedProps\n\n  return computed(() => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _getItemStyleCache = (_: any, __: any, ___: any) => ({})\n    return props.perfMode\n      ? memoize(_getItemStyleCache)\n      : memoOne(_getItemStyleCache)\n  })\n}\n", "export const DEFAULT_DYNAMIC_LIST_ITEM_SIZE = 50\n\nexport const ITEM_RENDER_EVT = 'itemRendered'\nexport const SCROLL_EVT = 'scroll'\n\nexport const FORWARD = 'forward'\nexport const BACKWARD = 'backward'\n\nexport const AUTO_ALIGNMENT = 'auto'\nexport const SMART_ALIGNMENT = 'smart'\nexport const START_ALIGNMENT = 'start'\nexport const CENTERED_ALIGNMENT = 'center'\nexport const END_ALIGNMENT = 'end'\n\nexport const HORIZONTAL = 'horizontal'\nexport const VERTICAL = 'vertical'\n\nexport const LTR = 'ltr'\nexport const RTL = 'rtl'\n\nexport const RTL_OFFSET_NAG = 'negative'\nexport const RTL_OFFSET_POS_ASC = 'positive-ascending'\nexport const RTL_OFFSET_POS_DESC = 'positive-descending'\n\nexport const PageKey = {\n  [HORIZONTAL]: 'pageX',\n  [VERTICAL]: 'pageY',\n}\n\nexport const ScrollbarSizeKey = {\n  [HORIZONTAL]: 'height',\n  [VERTICAL]: 'width',\n}\n\nexport const ScrollbarDirKey = {\n  [HORIZONTAL]: 'left',\n  [VERTICAL]: 'top',\n}\n\nexport const SCROLLBAR_MIN_SIZE = 20\n", "// @ts-nocheck\nimport { cAF, isFirefox, rAF } from '@element-plus/utils'\nimport { HORIZONTAL, VERTICAL } from '../defaults'\n\nimport type { ComputedRef } from 'vue'\nimport type { LayoutDirection } from '../types'\n\nconst LayoutKeys = {\n  [HORIZONTAL]: 'deltaX',\n  [VERTICAL]: 'deltaY',\n}\n\ninterface ListWheelState {\n  atStartEdge: ComputedRef<boolean> // exclusive to reachEnd\n  atEndEdge: ComputedRef<boolean>\n  layout: ComputedRef<LayoutDirection>\n}\n\ntype ListWheelHandler = (offset: number) => void\n\nconst useWheel = (\n  { atEndEdge, atStartEdge, layout }: ListWheelState,\n  onWheelDelta: ListWheelHandler\n) => {\n  let frameHandle: number\n  let offset = 0\n\n  // let scrollLock = false\n  // let lockHandle = null\n\n  // const lockScroll = () => {\n  //   clearTimeout(lockHandle)\n  //   scrollLock = true\n  //   lockHandle = setTimeout(() => scrollLock = false, 50)\n  // }\n\n  const hasReachedEdge = (offset: number) => {\n    const edgeReached =\n      (offset < 0 && atStartEdge.value) || (offset > 0 && atEndEdge.value)\n\n    return edgeReached\n  }\n\n  const onWheel = (e: WheelEvent) => {\n    cAF(frameHandle)\n\n    const newOffset = e[LayoutKeys[layout.value]]\n\n    if (hasReachedEdge(offset) && hasReachedEdge(offset + newOffset)) return\n\n    offset += newOffset\n\n    if (!isFirefox()) {\n      e.preventDefault()\n    }\n\n    frameHandle = rAF(() => {\n      onWheelDelta(offset)\n      offset = 0\n    })\n  }\n\n  return {\n    hasReachedEdge,\n    onWheel,\n  }\n}\n\nexport default useWheel\n", "import {\n  buildProp,\n  buildProps,\n  definePropType,\n  mutable,\n} from '@element-plus/utils'\nimport { VERTICAL } from './defaults'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { GridItemKeyGetter, ItemSize } from './types'\n\nconst itemSize = buildProp({\n  type: definePropType<number | ItemSize>([Number, Function]),\n  required: true,\n} as const)\n\nconst estimatedItemSize = buildProp({\n  type: Number,\n} as const)\n\nconst cache = buildProp({\n  type: Number,\n  default: 2,\n} as const)\n\nconst direction = buildProp({\n  type: String,\n  values: ['ltr', 'rtl'],\n  default: 'ltr',\n} as const)\n\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0,\n} as const)\n\nconst total = buildProp({\n  type: Number,\n  required: true,\n} as const)\n\nconst layout = buildProp({\n  type: String,\n  values: ['horizontal', 'vertical'],\n  default: VERTICAL,\n} as const)\n\nexport const virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: '',\n  },\n\n  containerElement: {\n    type: definePropType<string | Element>([String, Object]),\n    default: 'div',\n  },\n\n  data: {\n    type: definePropType<any[]>(Array),\n    default: () => mutable([] as const),\n  },\n\n  /**\n   * @description controls the horizontal direction.\n   */\n  direction,\n\n  height: {\n    type: [String, Number],\n    required: true,\n  },\n\n  innerElement: {\n    type: [String, Object],\n    default: 'div',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([Object, String, Array]),\n  },\n\n  useIsScrolling: {\n    type: Boolean,\n    default: false,\n  },\n\n  width: {\n    type: [Number, String],\n    required: false,\n  },\n\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const virtualizedListProps = buildProps({\n  /**\n   * @description describes how many items should be pre rendered to the head\n   * and the tail of the window\n   */\n  cache,\n\n  estimatedItemSize,\n\n  /**\n   * @description controls the list's orientation\n   */\n  layout,\n\n  initScrollOffset,\n\n  /**\n   * @description describes the total number of the list.\n   */\n  total,\n\n  itemSize,\n  ...virtualizedProps,\n} as const)\n\nconst scrollbarSize = {\n  type: Number,\n  default: 6,\n} as const\n\nconst startGap = { type: Number, default: 0 } as const\nconst endGap = { type: Number, default: 2 } as const\n\nexport const virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  itemKey: {\n    type: definePropType<GridItemKeyGetter>(Function),\n    default: ({\n      columnIndex,\n      rowIndex,\n    }: {\n      columnIndex: number\n      rowIndex: number\n    }) => `${rowIndex}:${columnIndex}`,\n  },\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  hScrollbarSize: scrollbarSize,\n  vScrollbarSize: scrollbarSize,\n  scrollbarStartGap: startGap,\n  scrollbarEndGap: endGap,\n  role: String,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedScrollbarProps = buildProps({\n  alwaysOn: Boolean,\n  class: String,\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  clientSize: {\n    type: Number,\n    required: true,\n  },\n  scrollFrom: {\n    type: Number,\n    required: true,\n  },\n  scrollbarSize,\n  startGap,\n  endGap,\n\n  visible: Boolean,\n} as const)\n\nexport type VirtualizedProps = ExtractPropTypes<typeof virtualizedProps>\nexport type VirtualizedListProps = ExtractPropTypes<typeof virtualizedListProps>\nexport type VirtualizedGridProps = ExtractPropTypes<typeof virtualizedGridProps>\n\nexport type VirtualizedScrollbarProps = ExtractPropTypes<\n  typeof virtualizedScrollbarProps\n>\n", "// @ts-nocheck\nimport {\n  BACKWARD,\n  FORWARD,\n  HORIZONTAL,\n  LTR,\n  PageKey,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n} from './defaults'\n\nimport type { CSSProperties } from 'vue'\nimport type { Direction, LayoutDirection, RTLOffsetType } from './types'\n\nexport const getScrollDir = (prev: number, cur: number) =>\n  prev < cur ? FORWARD : BACKWARD\n\nexport const isHorizontal = (dir: string) =>\n  dir === LTR || dir === RTL || dir === HORIZONTAL\n\nexport const isRTL = (dir: Direction) => dir === RTL\n\nlet cachedRTLResult: RTLOffsetType | null = null\n\nexport function getRTLOffsetType(recalculate = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div')\n    const outerStyle = outerDiv.style\n    outerStyle.width = '50px'\n    outerStyle.height = '50px'\n    outerStyle.overflow = 'scroll'\n    outerStyle.direction = 'rtl'\n\n    const innerDiv = document.createElement('div')\n    const innerStyle = innerDiv.style\n    innerStyle.width = '100px'\n    innerStyle.height = '100px'\n\n    outerDiv.appendChild(innerDiv)\n\n    document.body.appendChild(outerDiv)\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = RTL_OFFSET_POS_DESC\n    } else {\n      outerDiv.scrollLeft = 1\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = RTL_OFFSET_NAG\n      } else {\n        cachedRTLResult = RTL_OFFSET_POS_ASC\n      }\n    }\n\n    document.body.removeChild(outerDiv)\n\n    return cachedRTLResult\n  }\n\n  return cachedRTLResult\n}\n\nexport const getRelativePos = (\n  e: TouchEvent | MouseEvent,\n  layout: LayoutDirection\n) => {\n  return 'touches' in e ? e.touches[0][PageKey[layout]] : e[PageKey[layout]]\n}\n\ntype RenderThumbStyleParams = {\n  bar: {\n    size: 'height' | 'width'\n    axis: 'X' | 'Y'\n  }\n  size: string\n  move: number\n}\n\nexport function renderThumbStyle(\n  { move, size, bar }: RenderThumbStyleParams,\n  layout: string\n) {\n  const style: CSSProperties = {}\n  const translate = `translate${bar.axis}(${move}px)`\n\n  style[bar.size] = size\n  style.transform = translate\n  style.msTransform = translate\n  // polyfill\n  ;(style as any).webkitTransform = translate\n\n  if (layout === 'horizontal') {\n    style.height = '100%'\n  } else {\n    style.width = '100%'\n  }\n\n  return style\n}\n", "// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  reactive,\n  ref,\n  unref,\n  watch,\n  withModifiers,\n} from 'vue'\nimport { BAR_MAP } from '@element-plus/components/scrollbar'\nimport { cAF, rAF } from '@element-plus/utils'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport { HORIZONTAL, SCROLLBAR_MIN_SIZE, ScrollbarDirKey } from '../defaults'\nimport { virtualizedScrollbarProps } from '../props'\nimport { renderThumbStyle } from '../utils'\n\nimport type { CSSProperties } from 'vue'\n\nconst ScrollBar = defineComponent({\n  name: 'ElVirtualScrollBar',\n  props: virtualizedScrollbarProps,\n  emits: ['scroll', 'start-move', 'stop-move'],\n  setup(props, { emit }) {\n    const GAP = computed(() => props.startGap + props.endGap) // top 2 + bottom 2 | left 2 + right 2\n\n    const nsVirtualScrollbar = useNamespace('virtual-scrollbar')\n    const nsScrollbar = useNamespace('scrollbar')\n    // DOM refs\n    const trackRef = ref<HTMLElement>()\n    const thumbRef = ref<HTMLElement>()\n\n    // local variables\n    let frameHandle: null | number = null\n    let onselectstartStore: null | typeof document.onselectstart = null\n\n    // data\n    const state = reactive({\n      isDragging: false,\n      traveled: 0,\n    })\n\n    const bar = computed(() => BAR_MAP[props.layout])\n\n    const trackSize = computed(() => props.clientSize! - unref(GAP))\n\n    const trackStyle = computed<CSSProperties>(() => ({\n      position: 'absolute',\n      width: `${\n        HORIZONTAL === props.layout ? trackSize.value : props.scrollbarSize\n      }px`,\n      height: `${\n        HORIZONTAL === props.layout ? props.scrollbarSize : trackSize.value\n      }px`,\n      [ScrollbarDirKey[props.layout]]: '2px',\n      right: '2px',\n      bottom: '2px',\n      borderRadius: '4px',\n    }))\n\n    const thumbSize = computed(() => {\n      const ratio = props.ratio!\n      const clientSize = props.clientSize!\n      if (ratio >= 100) {\n        return Number.POSITIVE_INFINITY\n      }\n\n      if (ratio >= 50) {\n        return (ratio * clientSize) / 100\n      }\n\n      const SCROLLBAR_MAX_SIZE = clientSize / 3\n      return Math.floor(\n        Math.min(\n          Math.max(ratio * clientSize, SCROLLBAR_MIN_SIZE),\n          SCROLLBAR_MAX_SIZE\n        )\n      )\n    })\n\n    // const sizeRange = computed(() => props.size - thumbSize.value)\n\n    const thumbStyle = computed<CSSProperties>(() => {\n      if (!Number.isFinite(thumbSize.value)) {\n        return {\n          display: 'none',\n        }\n      }\n\n      const thumb = `${thumbSize.value}px`\n\n      const style: CSSProperties = renderThumbStyle(\n        {\n          bar: bar.value,\n          size: thumb,\n          move: state.traveled,\n        },\n        props.layout\n      )\n\n      return style\n    })\n\n    const totalSteps = computed(() =>\n      Math.floor(props.clientSize! - thumbSize.value - unref(GAP))\n    )\n\n    const attachEvents = () => {\n      window.addEventListener('mousemove', onMouseMove)\n      window.addEventListener('mouseup', onMouseUp)\n\n      const thumbEl = unref(thumbRef)\n\n      if (!thumbEl) return\n\n      onselectstartStore = document.onselectstart\n      document.onselectstart = () => false\n\n      thumbEl.addEventListener('touchmove', onMouseMove)\n      thumbEl.addEventListener('touchend', onMouseUp)\n    }\n\n    const detachEvents = () => {\n      window.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('mouseup', onMouseUp)\n\n      document.onselectstart = onselectstartStore\n      onselectstartStore = null\n\n      const thumbEl = unref(thumbRef)\n      if (!thumbEl) return\n\n      thumbEl.removeEventListener('touchmove', onMouseMove)\n      thumbEl.removeEventListener('touchend', onMouseUp)\n    }\n\n    const onThumbMouseDown = (e: Event) => {\n      e.stopImmediatePropagation()\n      if (\n        (e as KeyboardEvent).ctrlKey ||\n        [1, 2].includes((e as MouseEvent).button)\n      ) {\n        return\n      }\n\n      state.isDragging = true\n      state[bar.value.axis] =\n        e.currentTarget![bar.value.offset] -\n        (e[bar.value.client] -\n          (e.currentTarget as HTMLElement).getBoundingClientRect()[\n            bar.value.direction\n          ])\n\n      emit('start-move')\n      attachEvents()\n    }\n\n    const onMouseUp = () => {\n      state.isDragging = false\n      state[bar.value.axis] = 0\n      emit('stop-move')\n      detachEvents()\n    }\n\n    const onMouseMove = (e: Event) => {\n      const { isDragging } = state\n      if (!isDragging) return\n      if (!thumbRef.value || !trackRef.value) return\n\n      const prevPage = state[bar.value.axis]\n      if (!prevPage) return\n\n      cAF(frameHandle!)\n      // using the current track's offset top/left - the current pointer's clientY/clientX\n      // to get the relative position of the pointer to the track.\n      const offset =\n        (trackRef.value.getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]) *\n        -1\n\n      // find where the thumb was clicked on.\n      const thumbClickPosition = thumbRef.value[bar.value.offset] - prevPage\n      /**\n       *  +--------------+                                   +--------------+\n       *  |              -  <--------- thumb.offsetTop       |              |\n       *  |             |+|             <--+                 |              |\n       *  |              -                 |                 |              |\n       *  |   Content    |                 |                 |              |\n       *  |              |                 |                 |              |\n       *  |              |                 |                 |              |\n       *  |              |                 |                 |              -\n       *  |              |                 +-->              |             |+|\n       *  |              |                                   |              -\n       *  +--------------+                                   +--------------+\n       */\n\n      // using the current position - prev position to\n\n      const distance = offset - thumbClickPosition\n      // get how many steps in total.\n      // gap of 2 on top, 2 on bottom, in total 4.\n      // using totalSteps ÷ totalSize getting each step's size * distance to get the new\n      // scroll offset to scrollTo\n      frameHandle = rAF(() => {\n        state.traveled = Math.max(\n          props.startGap,\n          Math.min(\n            distance,\n            totalSteps.value // 2 is the top value\n          )\n        )\n        emit('scroll', distance, totalSteps.value)\n      })\n    }\n\n    const clickTrackHandler = (e: MouseEvent) => {\n      const offset = Math.abs(\n        (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]\n      )\n      const thumbHalf = thumbRef.value![bar.value.offset] / 2\n      const distance = offset - thumbHalf\n\n      state.traveled = Math.max(0, Math.min(distance, totalSteps.value))\n      emit('scroll', distance, totalSteps.value)\n    }\n\n    watch(\n      () => props.scrollFrom,\n      (v) => {\n        if (state.isDragging) return\n        /**\n         *  this is simply mapping the current scrollbar offset\n         *\n         *  formula 1:\n         *    v = scrollOffset / (estimatedTotalSize - clientSize)\n         *    traveled = v * (clientSize - thumbSize - GAP) --> v * totalSteps\n         *\n         *  formula 2:\n         *    traveled = (v * clientSize) / (clientSize / totalSteps) --> (v * clientSize) * (totalSteps / clientSize) --> v * totalSteps\n         */\n        state.traveled = Math.ceil(v! * totalSteps.value)\n      }\n    )\n\n    onBeforeUnmount(() => {\n      detachEvents()\n    })\n\n    return () => {\n      return h(\n        'div',\n        {\n          role: 'presentation',\n          ref: trackRef,\n          class: [\n            nsVirtualScrollbar.b(),\n            props.class,\n            (props.alwaysOn || state.isDragging) && 'always-on',\n          ],\n          style: trackStyle.value,\n          onMousedown: withModifiers(clickTrackHandler, ['stop', 'prevent']),\n          onTouchstartPrevent: onThumbMouseDown,\n        },\n        h(\n          'div',\n          {\n            ref: thumbRef,\n            class: nsScrollbar.e('thumb'),\n            style: thumbStyle.value,\n            onMousedown: onThumbMouseDown,\n          },\n          []\n        )\n      )\n    }\n  },\n})\n\nexport default ScrollBar\n", "// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  onUpdated,\n  ref,\n  resolveDynamicComponent,\n  unref,\n} from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { hasOwn, isNumber, isString } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useCache } from '../hooks/use-cache'\nimport useWheel from '../hooks/use-wheel'\nimport Scrollbar from '../components/scrollbar'\nimport { getRTLOffsetType, getScrollDir, isHorizontal } from '../utils'\nimport { virtualizedListProps } from '../props'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  HORIZONTAL,\n  ITEM_RENDER_EVT,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n  SCROLL_EVT,\n} from '../defaults'\n\nimport type { CSSProperties, Slot, VNode, VNodeChild } from 'vue'\nimport type { Alignment, ListConstructorProps } from '../types'\nimport type { VirtualizedListProps } from '../props'\n\nconst createList = ({\n  name,\n  getOffset,\n  getItemSize,\n  getItemOffset,\n  getEstimatedTotalSize,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initCache,\n  clearCache,\n  validateProps,\n}: ListConstructorProps<VirtualizedListProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedListProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose }) {\n      validateProps(props)\n      const instance = getCurrentInstance()!\n\n      const ns = useNamespace('vl')\n\n      const dynamicSizeCache = ref(initCache(props, instance))\n\n      const getItemStyleCache = useCache()\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const innerRef = ref<HTMLElement>()\n      const scrollbarRef = ref()\n      const states = ref({\n        isScrolling: false,\n        scrollDir: 'forward',\n        scrollOffset: isNumber(props.initScrollOffset)\n          ? props.initScrollOffset\n          : 0,\n        updateRequested: false,\n        isScrollbarDragging: false,\n        scrollbarAlwaysOn: props.scrollbarAlwaysOn,\n      })\n\n      // computed\n      const itemsToRender = computed(() => {\n        const { total, cache } = props\n        const { isScrolling, scrollDir, scrollOffset } = unref(states)\n\n        if (total === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getStartIndexForOffset(\n          props,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n        const stopIndex = getStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollOffset,\n          unref(dynamicSizeCache)\n        )\n\n        const cacheBackward =\n          !isScrolling || scrollDir === BACKWARD ? Math.max(1, cache) : 1\n        const cacheForward =\n          !isScrolling || scrollDir === FORWARD ? Math.max(1, cache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(total! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalSize = computed(() =>\n        getEstimatedTotalSize(props, unref(dynamicSizeCache))\n      )\n\n      const _isHorizontal = computed(() => isHorizontal(props.layout))\n\n      const windowStyle = computed(() => [\n        {\n          position: 'relative',\n          [`overflow-${_isHorizontal.value ? 'x' : 'y'}`]: 'scroll',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style,\n      ])\n\n      const innerStyle = computed(() => {\n        const size = unref(estimatedTotalSize)\n        const horizontal = unref(_isHorizontal)\n        return {\n          height: horizontal ? '100%' : `${size}px`,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width: horizontal ? `${size}px` : '100%',\n        }\n      })\n\n      const clientSize = computed(() =>\n        _isHorizontal.value ? props.width : props.height\n      )\n\n      // methods\n      const { onWheel } = useWheel(\n        {\n          atStartEdge: computed(() => states.value.scrollOffset <= 0),\n          atEndEdge: computed(\n            () => states.value.scrollOffset >= estimatedTotalSize.value\n          ),\n          layout: computed(() => props.layout),\n        },\n        (offset) => {\n          ;(\n            scrollbarRef.value as any as {\n              onMouseUp: () => void\n            }\n          ).onMouseUp?.()\n          scrollTo(\n            Math.min(\n              states.value.scrollOffset + offset,\n              estimatedTotalSize.value - (clientSize.value as number)\n            )\n          )\n        }\n      )\n\n      const emitEvents = () => {\n        const { total } = props\n\n        if (total! > 0) {\n          const [cacheStart, cacheEnd, visibleStart, visibleEnd] =\n            unref(itemsToRender)\n          emit(ITEM_RENDER_EVT, cacheStart, cacheEnd, visibleStart, visibleEnd)\n        }\n\n        const { scrollDir, scrollOffset, updateRequested } = unref(states)\n        emit(SCROLL_EVT, scrollDir, scrollOffset, updateRequested)\n      }\n\n      const scrollVertically = (e: Event) => {\n        const { clientHeight, scrollHeight, scrollTop } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n        if (_states.scrollOffset === scrollTop) {\n          return\n        }\n\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollHorizontally = (e: Event) => {\n        const { clientWidth, scrollLeft, scrollWidth } =\n          e.currentTarget as HTMLElement\n        const _states = unref(states)\n\n        if (_states.scrollOffset === scrollLeft) {\n          return\n        }\n\n        const { direction } = props\n\n        let scrollOffset = scrollLeft\n\n        if (direction === RTL) {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG: {\n              scrollOffset = -scrollLeft\n              break\n            }\n            case RTL_OFFSET_POS_DESC: {\n              scrollOffset = scrollWidth - clientWidth - scrollLeft\n              break\n            }\n          }\n        }\n\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        )\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollDir: getScrollDir(_states.scrollOffset, scrollOffset),\n          scrollOffset,\n          updateRequested: false,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const onScroll = (e: Event) => {\n        unref(_isHorizontal) ? scrollHorizontally(e) : scrollVertically(e)\n        emitEvents()\n      }\n\n      const onScrollbarScroll = (distanceToGo: number, totalSteps: number) => {\n        const offset =\n          ((estimatedTotalSize.value - (clientSize.value as number)) /\n            totalSteps) *\n          distanceToGo\n        scrollTo(\n          Math.min(\n            estimatedTotalSize.value - (clientSize.value as number),\n            offset\n          )\n        )\n      }\n\n      const scrollTo = (offset: number) => {\n        offset = Math.max(offset, 0)\n\n        if (offset === unref(states).scrollOffset) {\n          return\n        }\n\n        states.value = {\n          ...unref(states),\n          scrollOffset: offset,\n          scrollDir: getScrollDir(unref(states).scrollOffset, offset),\n          updateRequested: true,\n        }\n\n        nextTick(resetIsScrolling)\n      }\n\n      const scrollToItem = (\n        idx: number,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const { scrollOffset } = unref(states)\n\n        idx = Math.max(0, Math.min(idx, props.total! - 1))\n        scrollTo(\n          getOffset(\n            props,\n            idx,\n            alignment,\n            scrollOffset,\n            unref(dynamicSizeCache)\n          )\n        )\n      }\n\n      const getItemStyle = (idx: number) => {\n        const { direction, itemSize, layout } = props\n\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && itemSize,\n          clearCache && layout,\n          clearCache && direction\n        )\n\n        let style: CSSProperties\n        if (hasOwn(itemStyleCache, String(idx))) {\n          style = itemStyleCache[idx]\n        } else {\n          const offset = getItemOffset(props, idx, unref(dynamicSizeCache))\n          const size = getItemSize(props, idx, unref(dynamicSizeCache))\n          const horizontal = unref(_isHorizontal)\n\n          const isRtl = direction === RTL\n          const offsetHorizontal = horizontal ? offset : 0\n          itemStyleCache[idx] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : `${offsetHorizontal}px`,\n            right: isRtl ? `${offsetHorizontal}px` : undefined,\n            top: !horizontal ? `${offset}px` : 0,\n            height: !horizontal ? `${size}px` : '100%',\n            width: horizontal ? `${size}px` : '100%',\n          }\n        }\n\n        return style\n      }\n\n      // TODO:\n      // perf optimization here, reset isScrolling with debounce.\n\n      const resetIsScrolling = () => {\n        // timer = null\n\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      const resetScrollTop = () => {\n        const window = windowRef.value\n        if (window) {\n          window.scrollTop = 0\n        }\n      }\n\n      // life cycles\n      onMounted(() => {\n        if (!isClient) return\n        const { initScrollOffset } = props\n        const windowElement = unref(windowRef)\n        if (isNumber(initScrollOffset) && windowElement) {\n          if (unref(_isHorizontal)) {\n            windowElement.scrollLeft = initScrollOffset\n          } else {\n            windowElement.scrollTop = initScrollOffset\n          }\n        }\n\n        emitEvents()\n      })\n\n      onUpdated(() => {\n        const { direction, layout } = props\n        const { scrollOffset, updateRequested } = unref(states)\n        const windowElement = unref(windowRef)\n\n        if (updateRequested && windowElement) {\n          if (layout === HORIZONTAL) {\n            if (direction === RTL) {\n              // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n              // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n              // So we need to determine which browser behavior we're dealing with, and mimic it.\n              switch (getRTLOffsetType()) {\n                case RTL_OFFSET_NAG: {\n                  windowElement.scrollLeft = -scrollOffset\n                  break\n                }\n                case RTL_OFFSET_POS_ASC: {\n                  windowElement.scrollLeft = scrollOffset\n                  break\n                }\n                default: {\n                  const { clientWidth, scrollWidth } = windowElement\n                  windowElement.scrollLeft =\n                    scrollWidth - clientWidth - scrollOffset\n                  break\n                }\n              }\n            } else {\n              windowElement.scrollLeft = scrollOffset\n            }\n          } else {\n            windowElement.scrollTop = scrollOffset\n          }\n        }\n      })\n\n      const api = {\n        ns,\n        clientSize,\n        estimatedTotalSize,\n        windowStyle,\n        windowRef,\n        innerRef,\n        innerStyle,\n        itemsToRender,\n        scrollbarRef,\n        states,\n        getItemStyle,\n        onScroll,\n        onScrollbarScroll,\n        onWheel,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n      }\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        resetScrollTop,\n        states,\n      })\n\n      return api\n    },\n\n    render(ctx: any) {\n      const {\n        $slots,\n        className,\n        clientSize,\n        containerElement,\n        data,\n        getItemStyle,\n        innerElement,\n        itemsToRender,\n        innerStyle,\n        layout,\n        total,\n        onScroll,\n        onScrollbarScroll,\n        onWheel,\n        states,\n        useIsScrolling,\n        windowStyle,\n        ns,\n      } = ctx\n\n      const [start, end] = itemsToRender\n\n      const Container = resolveDynamicComponent(containerElement)\n      const Inner = resolveDynamicComponent(innerElement)\n\n      const children = [] as VNodeChild[]\n\n      if (total > 0) {\n        for (let i = start; i <= end; i++) {\n          children.push(\n            ($slots.default as Slot)?.({\n              data,\n              key: i,\n              index: i,\n              isScrolling: useIsScrolling ? states.isScrolling : undefined,\n              style: getItemStyle(i),\n            })\n          )\n        }\n      }\n\n      const InnerNode = [\n        h(\n          Inner as VNode,\n          {\n            style: innerStyle,\n            ref: 'innerRef',\n          },\n          !isString(Inner)\n            ? {\n                default: () => children,\n              }\n            : children\n        ),\n      ]\n\n      const scrollbar = h(Scrollbar, {\n        ref: 'scrollbarRef',\n        clientSize,\n        layout,\n        onScroll: onScrollbarScroll,\n        ratio: (clientSize * 100) / this.estimatedTotalSize,\n        scrollFrom:\n          states.scrollOffset / (this.estimatedTotalSize - clientSize),\n        total,\n      })\n\n      const listContainer = h(\n        Container as VNode,\n        {\n          class: [ns.e('window'), className],\n          style: windowStyle,\n          onScroll,\n          onWheel,\n          ref: 'windowRef',\n          key: 0,\n        },\n        !isString(Container) ? { default: () => [InnerNode] } : [InnerNode]\n      )\n\n      return h(\n        'div',\n        {\n          key: 0,\n          class: [ns.e('wrapper'), states.scrollbarAlwaysOn ? 'always-on' : ''],\n        },\n        [listContainer, scrollbar]\n      )\n    },\n  })\n}\n\nexport default createList\n", "import { isString, throwError } from '@element-plus/utils'\nimport buildList from '../builders/build-list'\nimport { isHorizontal } from '../utils'\nimport {\n  AUTO_ALIGNMENT,\n  CENTERED_ALIGNMENT,\n  END_ALIGNMENT,\n  SMART_ALIGNMENT,\n  START_ALIGNMENT,\n} from '../defaults'\n\nimport type { VirtualizedListProps } from '../props'\n\ntype Props = VirtualizedListProps\n\nconst FixedSizeList = buildList({\n  name: 'ElFixedSizeList',\n  getItemOffset: ({ itemSize }, index) => index * (itemSize as number),\n\n  getItemSize: ({ itemSize }) => itemSize as number,\n\n  getEstimatedTotalSize: ({ total, itemSize }) => (itemSize as number) * total,\n\n  getOffset: (\n    { height, total, itemSize, layout, width },\n    index,\n    alignment,\n    scrollOffset\n  ) => {\n    const size = (isHorizontal(layout) ? width : height) as number\n    if (process.env.NODE_ENV !== 'production' && isString(size)) {\n      throwError(\n        '[ElVirtualList]',\n        `\n        You should set\n          width/height\n        to number when your layout is\n          horizontal/vertical\n      `\n      )\n    }\n    const lastItemOffset = Math.max(0, total * (itemSize as number) - size)\n    const maxOffset = Math.min(lastItemOffset, index * (itemSize as number))\n    const minOffset = Math.max(0, (index + 1) * (itemSize as number) - size)\n\n    if (alignment === SMART_ALIGNMENT) {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        alignment = AUTO_ALIGNMENT\n      } else {\n        alignment = CENTERED_ALIGNMENT\n      }\n    }\n\n    switch (alignment) {\n      case START_ALIGNMENT: {\n        return maxOffset\n      }\n      case END_ALIGNMENT: {\n        return minOffset\n      }\n      case CENTERED_ALIGNMENT: {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2)\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0 // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset // near the end\n        } else {\n          return middleOffset\n        }\n      }\n      case AUTO_ALIGNMENT:\n      default: {\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset\n        } else if (scrollOffset < minOffset) {\n          return minOffset\n        } else {\n          return maxOffset\n        }\n      }\n    }\n  },\n\n  getStartIndexForOffset: ({ total, itemSize }, offset) =>\n    Math.max(0, Math.min(total - 1, Math.floor(offset / (itemSize as number)))),\n\n  getStopIndexForStartIndex: (\n    { height, total, itemSize, layout, width }: Props,\n    startIndex: number,\n    scrollOffset: number\n  ) => {\n    const offset = startIndex * (itemSize as number)\n    const size = isHorizontal(layout) ? width : height\n    const numVisibleItems = Math.ceil(\n      ((size as number) + scrollOffset - offset) / (itemSize as number)\n    )\n    return Math.max(\n      0,\n      Math.min(\n        total - 1,\n        // because startIndex is inclusive, so in order to prevent array outbound indexing\n        // we need to - 1 to prevent outbound behavior\n        startIndex + numVisibleItems - 1\n      )\n    )\n  },\n\n  /**\n   * Fixed size list does not need this cache\n   * Using any to bypass it, TODO: Using type inference to fix this.\n   */\n  initCache() {\n    return undefined as any\n  },\n\n  clearCache: true,\n\n  validateProps() {\n    //\n  },\n})\n\nexport default FixedSizeList\n", "import { throwError } from '@element-plus/utils'\n\nimport createList from '../builders/build-list'\n\nimport { isHorizontal } from '../utils'\nimport {\n  AUTO_ALIGNMENT,\n  CENTERED_ALIGNMENT,\n  DEFAULT_DYNAMIC_LIST_ITEM_SIZE,\n  END_ALIGNMENT,\n  SMART_ALIGNMENT,\n  START_ALIGNMENT,\n} from '../defaults'\nimport type { VirtualizedListProps } from '../props'\n\nimport type { ItemSize, ListCache, ListItem } from '../types'\n\ntype Props = VirtualizedListProps\n\nconst SCOPE = 'ElDynamicSizeList'\nconst getItemFromCache = (\n  props: Props,\n  index: number,\n  listCache: ListCache\n): ListItem => {\n  const { itemSize } = props\n  const { items, lastVisitedIndex } = listCache\n\n  if (index > lastVisitedIndex) {\n    let offset = 0\n    if (lastVisitedIndex >= 0) {\n      const item = items[lastVisitedIndex]\n      offset = item.offset + item.size\n    }\n\n    for (let i = lastVisitedIndex + 1; i <= index; i++) {\n      const size = (itemSize as ItemSize)(i)\n\n      items[i] = {\n        offset,\n        size,\n      }\n\n      offset += size\n    }\n\n    listCache.lastVisitedIndex = index\n  }\n\n  return items[index]\n}\n\nconst findItem = (props: Props, listCache: ListCache, offset: number) => {\n  const { items, lastVisitedIndex } = listCache\n\n  const lastVisitedOffset =\n    lastVisitedIndex > 0 ? items[lastVisitedIndex].offset : 0\n\n  if (lastVisitedOffset >= offset) {\n    return bs(props, listCache, 0, lastVisitedIndex, offset)\n  }\n  return es(props, listCache, Math.max(0, lastVisitedIndex), offset)\n}\n\n// bs stands for binary search which has approximately time complexity of O(Log n)\n// space complexity of O(1)\n// in this case we use it for search the offset of each item, since\n// the cached items' offset is monotonically increasing\nconst bs = (\n  props: Props,\n  listCache: ListCache,\n  low: number,\n  high: number,\n  offset: number\n) => {\n  while (low <= high) {\n    const mid = low + Math.floor((high - low) / 2)\n    const currentOffset = getItemFromCache(props, mid, listCache).offset\n\n    if (currentOffset === offset) {\n      return mid\n    } else if (currentOffset < offset) {\n      low = mid + 1\n    } else if (currentOffset > offset) {\n      high = mid - 1\n    }\n  }\n\n  return Math.max(0, low - 1)\n}\n\n// es stands for exponential search which has time complexity of O(Log n) and\n// space complexity of O(1) in the case of finding the boundary element.\n// the exponential indicator in this case is 2.\n// for more detail about exponential search click this link\n// https://www.freecodecamp.org/news/search-algorithms-exponential-search-explained/\n\nconst es = (\n  props: Props,\n  listCache: ListCache,\n  index: number,\n  offset: number\n) => {\n  const { total } = props\n  let exponent = 1\n\n  while (\n    index < total &&\n    getItemFromCache(props, index, listCache).offset < offset\n  ) {\n    index += exponent\n    exponent *= 2\n  }\n\n  return bs(\n    props,\n    listCache,\n    Math.floor(index / 2),\n    Math.min(index, total - 1),\n    offset\n  )\n}\n\nconst getEstimatedTotalSize = (\n  { total }: Props,\n  { items, estimatedItemSize, lastVisitedIndex }: ListCache\n) => {\n  let totalSizeOfMeasuredItems = 0\n\n  if (lastVisitedIndex >= total) {\n    lastVisitedIndex = total - 1\n  }\n\n  if (lastVisitedIndex >= 0) {\n    const item = items[lastVisitedIndex]\n    totalSizeOfMeasuredItems = item.offset + item.size\n  }\n\n  const numUnmeasuredItems = total - lastVisitedIndex - 1\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems\n}\n\nconst DynamicSizeList = createList({\n  name: 'ElDynamicSizeList',\n  getItemOffset: (props, index, listCache) =>\n    getItemFromCache(props, index, listCache).offset,\n\n  getItemSize: (_, index, { items }) => items[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffset: (props, index, alignment, scrollOffset, listCache) => {\n    const { height, layout, width } = props\n\n    const size = (isHorizontal(layout) ? width : height) as number\n    const item = getItemFromCache(props, index, listCache)\n\n    const estimatedTotalSize = getEstimatedTotalSize(props, listCache)\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, item.offset)\n    )\n    const minOffset = Math.max(0, item.offset - size + item.size)\n\n    if (alignment === SMART_ALIGNMENT) {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        alignment = AUTO_ALIGNMENT\n      } else {\n        alignment = CENTERED_ALIGNMENT\n      }\n    }\n\n    switch (alignment) {\n      case START_ALIGNMENT: {\n        return maxOffset\n      }\n      case END_ALIGNMENT: {\n        return minOffset\n      }\n      case CENTERED_ALIGNMENT: {\n        return Math.round(minOffset + (maxOffset - minOffset) / 2)\n      }\n      case AUTO_ALIGNMENT:\n      default: {\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset\n        } else if (scrollOffset < minOffset) {\n          return minOffset\n        } else {\n          return maxOffset\n        }\n      }\n    }\n  },\n\n  getStartIndexForOffset: (props, offset, listCache) =>\n    findItem(props, listCache, offset),\n\n  getStopIndexForStartIndex: (props, startIndex, scrollOffset, listCache) => {\n    const { height, total, layout, width } = props\n\n    const size = (isHorizontal(layout) ? width : height) as number\n    const item = getItemFromCache(props, startIndex, listCache)\n    const maxOffset = scrollOffset + size\n\n    let offset = item.offset + item.size\n    let stopIndex = startIndex\n\n    while (stopIndex < total - 1 && offset < maxOffset) {\n      stopIndex++\n      offset += getItemFromCache(props, stopIndex, listCache).size\n    }\n\n    return stopIndex\n  },\n\n  initCache({ estimatedItemSize = DEFAULT_DYNAMIC_LIST_ITEM_SIZE }, instance) {\n    const cache = {\n      items: {},\n      estimatedItemSize,\n      lastVisitedIndex: -1,\n    } as ListCache\n\n    cache.clearCacheAfterIndex = (index: number, forceUpdate = true) => {\n      cache.lastVisitedIndex = Math.min(cache.lastVisitedIndex, index - 1)\n      instance.exposed?.getItemStyleCache(-1)\n\n      if (forceUpdate) {\n        instance.proxy?.$forceUpdate()\n      }\n    }\n\n    return cache\n  },\n\n  clearCache: false,\n\n  validateProps: ({ itemSize }) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throwError(\n          SCOPE,\n          `\n          itemSize is required as function, but the given value was ${typeof itemSize}\n        `\n        )\n      }\n    }\n  },\n})\n\nexport default DynamicSizeList\n", "import { cAF, rAF } from '@element-plus/utils'\n\nimport type { ComputedRef } from 'vue'\n\ninterface GridWheelState {\n  atXStartEdge: ComputedRef<boolean>\n  atXEndEdge: ComputedRef<boolean>\n  atYStartEdge: ComputedRef<boolean>\n  atYEndEdge: ComputedRef<boolean>\n}\n\ntype GridWheelHandler = (x: number, y: number) => void\n\nexport const useGridWheel = (\n  { atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }: GridWheelState,\n  onWheelDelta: GridWheelHandler\n) => {\n  let frameHandle: number | null = null\n  let xOffset = 0\n  let yOffset = 0\n\n  const hasReachedEdge = (x: number, y: number) => {\n    const xEdgeReached =\n      (x <= 0 && atXStartEdge.value) || (x >= 0 && atXEndEdge.value)\n    const yEdgeReached =\n      (y <= 0 && atYStartEdge.value) || (y >= 0 && atYEndEdge.value)\n    return xEdgeReached && yEdgeReached\n  }\n\n  const onWheel = (e: WheelEvent) => {\n    cAF(frameHandle!)\n\n    let x = e.deltaX\n    let y = e.deltaY\n    // Simulate native behavior when using touch pad/track pad for wheeling.\n    if (Math.abs(x) > Math.abs(y)) {\n      y = 0\n    } else {\n      x = 0\n    }\n\n    // Special case for windows machine with shift key + wheel scrolling\n    if (e.shiftKey && y !== 0) {\n      x = y\n      y = 0\n    }\n\n    if (\n      hasReachedEdge(xOffset, yOffset) &&\n      hasReachedEdge(xOffset + x, yOffset + y)\n    )\n      return\n\n    xOffset += x\n    yOffset += y\n\n    e.preventDefault()\n\n    frameHandle = rAF(() => {\n      onWheelDelta(xOffset, yOffset)\n      xOffset = 0\n      yOffset = 0\n    })\n  }\n\n  return {\n    hasReachedEdge,\n    onWheel,\n  }\n}\n", "// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  ref,\n  resolveDynamicComponent,\n  unref,\n} from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  getScrollBarWidth,\n  hasOwn,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Scrollbar from '../components/scrollbar'\nimport { useGridWheel } from '../hooks/use-grid-wheel'\nimport { useCache } from '../hooks/use-cache'\nimport { virtualizedGridProps } from '../props'\nimport { getRTLOffsetType, getScrollDir, isRTL } from '../utils'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  ITEM_RENDER_EVT,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n  SCROLL_EVT,\n} from '../defaults'\nimport type {\n  CSSProperties,\n  Ref,\n  StyleValue,\n  UnwrapRef,\n  VNode,\n  VNodeChild,\n} from 'vue'\nimport type {\n  Alignment,\n  GridConstructorProps,\n  GridScrollOptions,\n  ScrollbarExpose,\n} from '../types'\nimport type { VirtualizedGridProps } from '../props'\n\nconst createGrid = ({\n  name,\n  clearCache,\n  getColumnPosition,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getColumnOffset,\n  getRowOffset,\n  getRowPosition,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n\n  initCache,\n  injectToInstance,\n  validateProps,\n}: GridConstructorProps<VirtualizedGridProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedGridProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose, slots }) {\n      const ns = useNamespace('vl')\n\n      validateProps(props)\n      const instance = getCurrentInstance()!\n      const cache = ref(initCache(props, instance))\n      injectToInstance?.(instance, cache)\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const hScrollbar = ref<ScrollbarExpose>()\n      const vScrollbar = ref<ScrollbarExpose>()\n      // innerRef is the actual container element which contains all the elements\n      const innerRef = ref(null)\n      const states = ref({\n        isScrolling: false,\n        scrollLeft: isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,\n        scrollTop: isNumber(props.initScrollTop) ? props.initScrollTop : 0,\n        updateRequested: false,\n        xAxisScrollDir: FORWARD,\n        yAxisScrollDir: FORWARD,\n      })\n\n      const getItemStyleCache = useCache()\n\n      // computed\n      const parsedHeight = computed(() =>\n        Number.parseInt(`${props.height}`, 10)\n      )\n      const parsedWidth = computed(() => Number.parseInt(`${props.width}`, 10))\n      const columnsToRender = computed(() => {\n        const { totalColumn, totalRow, columnCache } = props\n        const { isScrolling, xAxisScrollDir, scrollLeft } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getColumnStartIndexForOffset(\n          props,\n          scrollLeft,\n          unref(cache)\n        )\n        const stopIndex = getColumnStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollLeft,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || xAxisScrollDir === BACKWARD\n            ? Math.max(1, columnCache)\n            : 1\n        const cacheForward =\n          !isScrolling || xAxisScrollDir === FORWARD\n            ? Math.max(1, columnCache)\n            : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalColumn! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const rowsToRender = computed(() => {\n        const { totalColumn, totalRow, rowCache } = props\n        const { isScrolling, yAxisScrollDir, scrollTop } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getRowStartIndexForOffset(\n          props,\n          scrollTop,\n          unref(cache)\n        )\n        const stopIndex = getRowStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollTop,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || yAxisScrollDir === BACKWARD\n            ? Math.max(1, rowCache)\n            : 1\n        const cacheForward =\n          !isScrolling || yAxisScrollDir === FORWARD ? Math.max(1, rowCache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalRow! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalHeight = computed(() =>\n        getEstimatedTotalHeight(props, unref(cache))\n      )\n      const estimatedTotalWidth = computed(() =>\n        getEstimatedTotalWidth(props, unref(cache))\n      )\n\n      const windowStyle = computed<StyleValue>(() => [\n        {\n          position: 'relative',\n          overflow: 'hidden',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style ?? {},\n      ])\n\n      const innerStyle = computed(() => {\n        const width = `${unref(estimatedTotalWidth)}px`\n        const height = `${unref(estimatedTotalHeight)}px`\n\n        return {\n          height,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width,\n        }\n      })\n\n      // methods\n      const emitEvents = () => {\n        const { totalColumn, totalRow } = props\n\n        if (totalColumn! > 0 && totalRow! > 0) {\n          const [\n            columnCacheStart,\n            columnCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n          ] = unref(columnsToRender)\n          const [rowCacheStart, rowCacheEnd, rowVisibleStart, rowVisibleEnd] =\n            unref(rowsToRender)\n          // emit the render item event with\n          // [xAxisInvisibleStart, xAxisInvisibleEnd, xAxisVisibleStart, xAxisVisibleEnd]\n          // [yAxisInvisibleStart, yAxisInvisibleEnd, yAxisVisibleStart, yAxisVisibleEnd]\n          emit(ITEM_RENDER_EVT, {\n            columnCacheStart,\n            columnCacheEnd,\n            rowCacheStart,\n            rowCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n            rowVisibleStart,\n            rowVisibleEnd,\n          })\n        }\n\n        const {\n          scrollLeft,\n          scrollTop,\n          updateRequested,\n          xAxisScrollDir,\n          yAxisScrollDir,\n        } = unref(states)\n        emit(SCROLL_EVT, {\n          xAxisScrollDir,\n          scrollLeft,\n          yAxisScrollDir,\n          scrollTop,\n          updateRequested,\n        })\n      }\n\n      const onScroll = (e: Event) => {\n        const {\n          clientHeight,\n          clientWidth,\n          scrollHeight,\n          scrollLeft,\n          scrollTop,\n          scrollWidth,\n        } = e.currentTarget as HTMLElement\n\n        const _states = unref(states)\n\n        if (\n          _states.scrollTop === scrollTop &&\n          _states.scrollLeft === scrollLeft\n        ) {\n          return\n        }\n\n        let _scrollLeft = scrollLeft\n\n        if (isRTL(props.direction)) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              _scrollLeft = -scrollLeft\n              break\n            case RTL_OFFSET_POS_DESC:\n              _scrollLeft = scrollWidth - clientWidth - scrollLeft\n              break\n          }\n        }\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: Math.max(\n            0,\n            Math.min(scrollTop, scrollHeight - clientHeight)\n          ),\n          updateRequested: true,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, _scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const onVerticalScroll = (distance: number, totalSteps: number) => {\n        const height = unref(parsedHeight)\n        const offset =\n          ((estimatedTotalHeight.value - height) / totalSteps) * distance\n        scrollTo({\n          scrollTop: Math.min(estimatedTotalHeight.value - height, offset),\n        })\n      }\n\n      const onHorizontalScroll = (distance: number, totalSteps: number) => {\n        const width = unref(parsedWidth)\n        const offset =\n          ((estimatedTotalWidth.value - width) / totalSteps) * distance\n        scrollTo({\n          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset),\n        })\n      }\n\n      const { onWheel } = useGridWheel(\n        {\n          atXStartEdge: computed(() => states.value.scrollLeft <= 0),\n          atXEndEdge: computed(\n            () =>\n              states.value.scrollLeft >=\n              estimatedTotalWidth.value - unref(parsedWidth)\n          ),\n          atYStartEdge: computed(() => states.value.scrollTop <= 0),\n          atYEndEdge: computed(\n            () =>\n              states.value.scrollTop >=\n              estimatedTotalHeight.value - unref(parsedHeight)\n          ),\n        },\n        (x: number, y: number) => {\n          hScrollbar.value?.onMouseUp?.()\n          hScrollbar.value?.onMouseUp?.()\n          const width = unref(parsedWidth)\n          const height = unref(parsedHeight)\n          scrollTo({\n            scrollLeft: Math.min(\n              states.value.scrollLeft + x,\n              estimatedTotalWidth.value - width\n            ),\n            scrollTop: Math.min(\n              states.value.scrollTop + y,\n              estimatedTotalHeight.value - height\n            ),\n          })\n        }\n      )\n\n      const scrollTo = ({\n        scrollLeft = states.value.scrollLeft,\n        scrollTop = states.value.scrollTop,\n      }: GridScrollOptions) => {\n        scrollLeft = Math.max(scrollLeft, 0)\n        scrollTop = Math.max(scrollTop, 0)\n        const _states = unref(states)\n        if (\n          scrollTop === _states.scrollTop &&\n          scrollLeft === _states.scrollLeft\n        ) {\n          return\n        }\n\n        states.value = {\n          ..._states,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n          scrollLeft,\n          scrollTop,\n          updateRequested: true,\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const scrollToItem = (\n        rowIndex = 0,\n        columnIdx = 0,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const _states = unref(states)\n        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn! - 1))\n        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow! - 1))\n        const scrollBarWidth = getScrollBarWidth(ns.namespace.value)\n\n        const _cache = unref(cache)\n        const estimatedHeight = getEstimatedTotalHeight(props, _cache)\n        const estimatedWidth = getEstimatedTotalWidth(props, _cache)\n\n        scrollTo({\n          scrollLeft: getColumnOffset(\n            props,\n            columnIdx,\n            alignment,\n            _states.scrollLeft,\n            _cache,\n            estimatedWidth > props.width! ? scrollBarWidth : 0\n          ),\n          scrollTop: getRowOffset(\n            props,\n            rowIndex,\n            alignment,\n            _states.scrollTop,\n            _cache,\n            estimatedHeight > props.height! ? scrollBarWidth : 0\n          ),\n        })\n      }\n\n      const getItemStyle = (\n        rowIndex: number,\n        columnIndex: number\n      ): CSSProperties => {\n        const { columnWidth, direction, rowHeight } = props\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && columnWidth,\n          clearCache && rowHeight,\n          clearCache && direction\n        )\n        // since there was no need to introduce an nested array into cache object\n        // we use row,column to construct the key for indexing the map.\n        const key = `${rowIndex},${columnIndex}`\n\n        if (hasOwn(itemStyleCache, key)) {\n          return itemStyleCache[key]\n        } else {\n          const [, left] = getColumnPosition(props, columnIndex, unref(cache))\n          const _cache = unref(cache)\n\n          const rtl = isRTL(direction)\n          const [height, top] = getRowPosition(props, rowIndex, _cache)\n          const [width] = getColumnPosition(props, columnIndex, _cache)\n\n          itemStyleCache[key] = {\n            position: 'absolute',\n            left: rtl ? undefined : `${left}px`,\n            right: rtl ? `${left}px` : undefined,\n            top: `${top}px`,\n            height: `${height}px`,\n            width: `${width}px`,\n          }\n\n          return itemStyleCache[key]\n        }\n      }\n\n      // TODO: debounce setting is scrolling.\n\n      const resetIsScrolling = () => {\n        // timer = null\n\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      // life cycles\n      onMounted(() => {\n        // for SSR\n        if (!isClient) return\n        const { initScrollLeft, initScrollTop } = props\n        const windowElement = unref(windowRef)\n        if (windowElement) {\n          if (isNumber(initScrollLeft)) {\n            windowElement.scrollLeft = initScrollLeft\n          }\n          if (isNumber(initScrollTop)) {\n            windowElement.scrollTop = initScrollTop\n          }\n        }\n        emitEvents()\n      })\n\n      const onUpdated = () => {\n        const { direction } = props\n        const { scrollLeft, scrollTop, updateRequested } = unref(states)\n\n        const windowElement = unref(windowRef)\n        if (updateRequested && windowElement) {\n          if (direction === RTL) {\n            switch (getRTLOffsetType()) {\n              case RTL_OFFSET_NAG: {\n                windowElement.scrollLeft = -scrollLeft\n                break\n              }\n              case RTL_OFFSET_POS_ASC: {\n                windowElement.scrollLeft = scrollLeft\n                break\n              }\n              default: {\n                const { clientWidth, scrollWidth } = windowElement\n                windowElement.scrollLeft =\n                  scrollWidth - clientWidth - scrollLeft\n                break\n              }\n            }\n          } else {\n            windowElement.scrollLeft = Math.max(0, scrollLeft)\n          }\n\n          windowElement.scrollTop = Math.max(0, scrollTop)\n        }\n      }\n\n      const { resetAfterColumnIndex, resetAfterRowIndex, resetAfter } =\n        instance.proxy as any\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        states,\n        resetAfterColumnIndex,\n        resetAfterRowIndex,\n        resetAfter,\n      })\n\n      // rendering part\n\n      const renderScrollbars = () => {\n        const {\n          scrollbarAlwaysOn,\n          scrollbarStartGap,\n          scrollbarEndGap,\n          totalColumn,\n          totalRow,\n        } = props\n\n        const width = unref(parsedWidth)\n        const height = unref(parsedHeight)\n        const estimatedWidth = unref(estimatedTotalWidth)\n        const estimatedHeight = unref(estimatedTotalHeight)\n        const { scrollLeft, scrollTop } = unref(states)\n        const horizontalScrollbar = h(Scrollbar, {\n          ref: hScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('horizontal'),\n          clientSize: width,\n          layout: 'horizontal',\n          onScroll: onHorizontalScroll,\n          ratio: (width * 100) / estimatedWidth,\n          scrollFrom: scrollLeft / (estimatedWidth - width),\n          total: totalRow,\n          visible: true,\n        })\n\n        const verticalScrollbar = h(Scrollbar, {\n          ref: vScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('vertical'),\n          clientSize: height,\n          layout: 'vertical',\n          onScroll: onVerticalScroll,\n          ratio: (height * 100) / estimatedHeight,\n          scrollFrom: scrollTop / (estimatedHeight - height),\n\n          total: totalColumn,\n          visible: true,\n        })\n\n        return {\n          horizontalScrollbar,\n          verticalScrollbar,\n        }\n      }\n\n      const renderItems = () => {\n        const [columnStart, columnEnd] = unref(columnsToRender)\n        const [rowStart, rowEnd] = unref(rowsToRender)\n        const { data, totalColumn, totalRow, useIsScrolling, itemKey } = props\n        const children: VNodeChild[] = []\n        if (totalRow > 0 && totalColumn > 0) {\n          for (let row = rowStart; row <= rowEnd; row++) {\n            for (let column = columnStart; column <= columnEnd; column++) {\n              children.push(\n                slots.default?.({\n                  columnIndex: column,\n                  data,\n                  key: itemKey({ columnIndex: column, data, rowIndex: row }),\n                  isScrolling: useIsScrolling\n                    ? unref(states).isScrolling\n                    : undefined,\n                  style: getItemStyle(row, column),\n                  rowIndex: row,\n                })\n              )\n            }\n          }\n        }\n        return children\n      }\n\n      const renderInner = () => {\n        const Inner = resolveDynamicComponent(props.innerElement) as VNode\n        const children = renderItems()\n        return [\n          h(\n            Inner,\n            {\n              style: unref(innerStyle),\n              ref: innerRef,\n            },\n            !isString(Inner)\n              ? {\n                  default: () => children,\n                }\n              : children\n          ),\n        ]\n      }\n\n      const renderWindow = () => {\n        const Container = resolveDynamicComponent(\n          props.containerElement\n        ) as VNode\n        const { horizontalScrollbar, verticalScrollbar } = renderScrollbars()\n        const Inner = renderInner()\n\n        return h(\n          'div',\n          {\n            key: 0,\n            class: ns.e('wrapper'),\n            role: props.role,\n          },\n          [\n            h(\n              Container,\n              {\n                class: props.className,\n                style: unref(windowStyle),\n                onScroll,\n                onWheel,\n                ref: windowRef,\n              },\n              !isString(Container) ? { default: () => Inner } : Inner\n            ),\n            horizontalScrollbar,\n            verticalScrollbar,\n          ]\n        )\n      }\n\n      return renderWindow\n    },\n  })\n}\n\nexport default createGrid\n\ntype Dir = typeof FORWARD | typeof BACKWARD\n\nexport type GridInstance = InstanceType<ReturnType<typeof createGrid>> &\n  UnwrapRef<{\n    windowRef: Ref<HTMLElement>\n    innerRef: Ref<HTMLElement>\n    getItemStyleCache: ReturnType<typeof useCache>\n    scrollTo: (scrollOptions: GridScrollOptions) => void\n    scrollToItem: (\n      rowIndex: number,\n      columnIndex: number,\n      alignment: Alignment\n    ) => void\n    states: Ref<{\n      isScrolling: boolean\n      scrollLeft: number\n      scrollTop: number\n      updateRequested: boolean\n      xAxisScrollDir: Dir\n      yAxisScrollDir: Dir\n    }>\n  }>\n", "import { isNumber, throwError } from '@element-plus/utils'\nimport createGrid from '../builders/build-grid'\n\nimport {\n  AUTO_ALIGNMENT,\n  CENTERED_ALIGNMENT,\n  END_ALIGNMENT,\n  SMART_ALIGNMENT,\n  START_ALIGNMENT,\n} from '../defaults'\n\nconst SCOPE = 'ElFixedSizeGrid'\n\nconst FixedSizeGrid = createGrid({\n  name: 'ElFixedSizeGrid',\n  getColumnPosition: ({ columnWidth }, index) => [\n    columnWidth as number,\n    index * (columnWidth as number),\n  ],\n\n  getRowPosition: ({ rowHeight }, index) => [\n    rowHeight as number,\n    index * (rowHeight as number),\n  ],\n\n  getEstimatedTotalHeight: ({ totalRow, rowHeight }) =>\n    (rowHeight as number) * totalRow,\n\n  getEstimatedTotalWidth: ({ totalColumn, columnWidth }) =>\n    (columnWidth as number) * totalColumn,\n\n  getColumnOffset: (\n    { totalColumn, columnWidth, width },\n    columnIndex,\n    alignment,\n    scrollLeft,\n    _,\n    scrollBarWidth\n  ) => {\n    width = Number(width)\n    const lastColumnOffset = Math.max(\n      0,\n      totalColumn * (columnWidth as number) - width\n    )\n    const maxOffset = Math.min(\n      lastColumnOffset,\n      columnIndex * (columnWidth as number)\n    )\n    const minOffset = Math.max(\n      0,\n      columnIndex * (columnWidth as number) -\n        width +\n        scrollBarWidth +\n        (columnWidth as number)\n    )\n\n    if (alignment === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        alignment = AUTO_ALIGNMENT\n      } else {\n        alignment = CENTERED_ALIGNMENT\n      }\n    }\n\n    switch (alignment) {\n      case START_ALIGNMENT:\n        return maxOffset\n      case END_ALIGNMENT:\n        return minOffset\n      case CENTERED_ALIGNMENT: {\n        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2)\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset\n        } else {\n          return middleOffset\n        }\n      }\n      case AUTO_ALIGNMENT:\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft\n        } else if (minOffset > maxOffset) {\n          return minOffset\n        } else if (scrollLeft < minOffset) {\n          return minOffset\n        } else {\n          return maxOffset\n        }\n    }\n  },\n\n  getRowOffset: (\n    { rowHeight, height, totalRow },\n    rowIndex,\n    align,\n    scrollTop,\n    _,\n    scrollBarWidth\n  ): number => {\n    height = Number(height)\n    const lastRowOffset = Math.max(0, totalRow * (rowHeight as number) - height)\n    const maxOffset = Math.min(lastRowOffset, rowIndex * (rowHeight as number))\n    const minOffset = Math.max(\n      0,\n      rowIndex * (rowHeight as number) -\n        height +\n        scrollBarWidth +\n        (rowHeight as number)\n    )\n\n    if (align === SMART_ALIGNMENT) {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = AUTO_ALIGNMENT\n      } else {\n        align = CENTERED_ALIGNMENT\n      }\n    }\n\n    switch (align) {\n      case START_ALIGNMENT:\n        return maxOffset\n      case END_ALIGNMENT:\n        return minOffset\n      case CENTERED_ALIGNMENT: {\n        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2)\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset\n        } else {\n          return middleOffset\n        }\n      }\n      case AUTO_ALIGNMENT:\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop\n        } else if (minOffset > maxOffset) {\n          return minOffset\n        } else if (scrollTop < minOffset) {\n          return minOffset\n        } else {\n          return maxOffset\n        }\n    }\n  },\n\n  getColumnStartIndexForOffset: ({ columnWidth, totalColumn }, scrollLeft) =>\n    Math.max(\n      0,\n      Math.min(\n        totalColumn - 1,\n        Math.floor(scrollLeft / (columnWidth as number))\n      )\n    ),\n\n  getColumnStopIndexForStartIndex: (\n    { columnWidth, totalColumn, width },\n    startIndex: number,\n    scrollLeft: number\n  ): number => {\n    const left = startIndex * (columnWidth as number)\n    const visibleColumnsCount = Math.ceil(\n      ((width as number) + scrollLeft - left) / (columnWidth as number)\n    )\n    return Math.max(\n      0,\n      Math.min(totalColumn - 1, startIndex + visibleColumnsCount - 1)\n    )\n  },\n\n  getRowStartIndexForOffset: (\n    { rowHeight, totalRow },\n    scrollTop: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(totalRow - 1, Math.floor(scrollTop / (rowHeight as number)))\n    ),\n\n  getRowStopIndexForStartIndex: (\n    { rowHeight, totalRow, height },\n    startIndex: number,\n    scrollTop: number\n  ): number => {\n    const top = startIndex * (rowHeight as number)\n    const numVisibleRows = Math.ceil(\n      ((height as number) + scrollTop - top) / (rowHeight as number)\n    )\n    return Math.max(\n      0,\n      Math.min(\n        totalRow - 1,\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n      )\n    )\n  },\n  /**\n   * Fixed size grid does not need this cache\n   * Using any to bypass it, TODO: Using type inference to fix this.\n   */\n  initCache: () => undefined as any,\n\n  clearCache: true,\n\n  validateProps: ({ columnWidth, rowHeight }) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isNumber(columnWidth)) {\n        throwError(\n          SCOPE,\n          `\n          \"columnWidth\" must be passed as number,\n            instead ${typeof columnWidth} was given.\n        `\n        )\n      }\n\n      if (!isNumber(rowHeight)) {\n        throwError(\n          SCOPE,\n          `\n          \"columnWidth\" must be passed as number,\n            instead ${typeof rowHeight} was given.\n        `\n        )\n      }\n    }\n  },\n})\n\nexport default FixedSizeGrid\n", "// @ts-nocheck\nimport { isFunction } from '@vue/shared'\nimport { isNumber, isUndefined, throwError } from '@element-plus/utils'\nimport createGrid from '../builders/build-grid'\n\nimport {\n  AUTO_ALIGNMENT,\n  CENTERED_ALIGNMENT,\n  DEFAULT_DYNAMIC_LIST_ITEM_SIZE,\n  END_ALIGNMENT,\n  SMART_ALIGNMENT,\n  START_ALIGNMENT,\n} from '../defaults'\nimport type { GridInstance } from '../builders/build-grid'\nimport type { VirtualizedGridProps } from '../props'\n\nimport type { Alignment, GridCache, ItemSize, ListItem } from '../types'\n\nconst { max, min, floor } = Math\nconst SCOPE = 'ElDynamicSizeGrid'\n\ntype Props = VirtualizedGridProps\ntype CacheItemType = 'column' | 'row'\ntype Indices = {\n  columnIndex?: number\n  rowIndex?: number\n}\n\n// generates props access key via type\nconst ACCESS_SIZER_KEY_MAP = {\n  column: 'columnWidth',\n  row: 'rowHeight',\n}\n\n// generates cache access key via type\nconst ACCESS_LAST_VISITED_KEY_MAP = {\n  column: 'lastVisitedColumnIndex',\n  row: 'lastVisitedRowIndex',\n}\n\nconst getItemFromCache = (\n  props: Props,\n  index: number,\n  gridCache: GridCache,\n  type: CacheItemType\n) => {\n  const [cachedItems, sizer, lastVisited] = [\n    gridCache[type],\n    props[ACCESS_SIZER_KEY_MAP[type]],\n    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]],\n  ] as [Record<string, ListItem>, ItemSize, number]\n\n  if (index > lastVisited) {\n    let offset = 0\n    if (lastVisited >= 0) {\n      const item = cachedItems[lastVisited]\n      offset = item.offset + item.size\n    }\n\n    for (let i = lastVisited + 1; i <= index; i++) {\n      // console.log(i, sizer(i))\n      const size = sizer(i)\n\n      cachedItems[i] = {\n        offset,\n        size,\n      }\n\n      offset += size\n    }\n\n    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]] = index\n  }\n\n  return cachedItems[index]\n}\n\nconst bs = (\n  props: Props,\n  gridCache: GridCache,\n  low: number,\n  high: number,\n  offset: number,\n  type: CacheItemType\n) => {\n  while (low <= high) {\n    const mid = low + floor((high - low) / 2)\n    const currentOffset = getItemFromCache(props, mid, gridCache, type).offset\n\n    if (currentOffset === offset) {\n      return mid\n    } else if (currentOffset < offset) {\n      low = mid + 1\n    } else {\n      high = mid - 1\n    }\n  }\n\n  return max(0, low - 1)\n}\n\nconst es = (\n  props: Props,\n  gridCache: GridCache,\n  idx: number,\n  offset: number,\n  type: CacheItemType\n) => {\n  const total = type === 'column' ? props.totalColumn : props.totalRow\n  let exponent = 1\n\n  while (\n    idx < total &&\n    getItemFromCache(props, idx, gridCache, type).offset < offset\n  ) {\n    idx += exponent\n    exponent *= 2\n  }\n\n  return bs(props, gridCache, floor(idx / 2), min(idx, total - 1), offset, type)\n}\n\nconst findItem = (\n  props: Props,\n  gridCache: GridCache,\n  offset: number,\n  type: CacheItemType\n) => {\n  const [cache, lastVisitedIndex] = [\n    gridCache[type],\n    gridCache[ACCESS_LAST_VISITED_KEY_MAP[type]],\n  ] as [Record<string, ListItem>, number]\n\n  const lastVisitedItemOffset =\n    lastVisitedIndex > 0 ? cache[lastVisitedIndex].offset : 0\n\n  if (lastVisitedItemOffset >= offset) {\n    return bs(props, gridCache, 0, lastVisitedIndex, offset, type)\n  }\n\n  return es(props, gridCache, max(0, lastVisitedIndex), offset, type)\n}\n\nconst getEstimatedTotalHeight = (\n  { totalRow }: Props,\n  { estimatedRowHeight, lastVisitedRowIndex, row }: GridCache\n) => {\n  let sizeOfVisitedRows = 0\n\n  if (lastVisitedRowIndex >= totalRow) {\n    lastVisitedRowIndex = totalRow - 1\n  }\n\n  if (lastVisitedRowIndex >= 0) {\n    const item = row[lastVisitedRowIndex]\n    sizeOfVisitedRows = item.offset + item.size\n  }\n\n  const unvisitedItems = totalRow - lastVisitedRowIndex - 1\n  const sizeOfUnvisitedItems = unvisitedItems * estimatedRowHeight\n\n  return sizeOfVisitedRows + sizeOfUnvisitedItems\n}\nconst getEstimatedTotalWidth = (\n  { totalColumn }: Props,\n  { column, estimatedColumnWidth, lastVisitedColumnIndex }: GridCache\n) => {\n  let sizeOfVisitedColumns = 0\n\n  if (lastVisitedColumnIndex > totalColumn) {\n    lastVisitedColumnIndex = totalColumn - 1\n  }\n\n  if (lastVisitedColumnIndex >= 0) {\n    const item = column[lastVisitedColumnIndex]\n    sizeOfVisitedColumns = item.offset + item.size\n  }\n\n  const unvisitedItems = totalColumn - lastVisitedColumnIndex - 1\n  const sizeOfUnvisitedItems = unvisitedItems * estimatedColumnWidth\n\n  return sizeOfVisitedColumns + sizeOfUnvisitedItems\n}\n\nconst ACCESS_ESTIMATED_SIZE_KEY_MAP = {\n  column: getEstimatedTotalWidth,\n  row: getEstimatedTotalHeight,\n}\n\nconst getOffset = (\n  props: Props,\n  index: number,\n  alignment: Alignment,\n  scrollOffset: number,\n  cache: GridCache,\n  type: CacheItemType,\n  scrollBarWidth: number\n) => {\n  const [size, estimatedSizeAssociates] = [\n    type === 'row' ? props.height : props.width,\n    ACCESS_ESTIMATED_SIZE_KEY_MAP[type],\n  ] as [number, (props: Props, cache: GridCache) => number]\n  const item = getItemFromCache(props, index, cache, type)\n\n  const estimatedSize = estimatedSizeAssociates(props, cache)\n\n  const maxOffset = max(0, min(estimatedSize - size, item.offset))\n  const minOffset = max(0, item.offset - size + scrollBarWidth + item.size)\n\n  if (alignment === SMART_ALIGNMENT) {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      alignment = AUTO_ALIGNMENT\n    } else {\n      alignment = CENTERED_ALIGNMENT\n    }\n  }\n\n  switch (alignment) {\n    case START_ALIGNMENT: {\n      return maxOffset\n    }\n    case END_ALIGNMENT: {\n      return minOffset\n    }\n    case CENTERED_ALIGNMENT: {\n      return Math.round(minOffset + (maxOffset - minOffset) / 2)\n    }\n    case AUTO_ALIGNMENT:\n    default: {\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset\n      } else if (minOffset > maxOffset) {\n        return minOffset\n      } else if (scrollOffset < minOffset) {\n        return minOffset\n      } else {\n        return maxOffset\n      }\n    }\n  }\n}\n\nconst DynamicSizeGrid = createGrid({\n  name: 'ElDynamicSizeGrid',\n  getColumnPosition: (props, idx, cache) => {\n    const item = getItemFromCache(props, idx, cache, 'column')\n    return [item.size, item.offset]\n  },\n\n  getRowPosition: (props, idx, cache) => {\n    const item = getItemFromCache(props, idx, cache, 'row')\n    return [item.size, item.offset]\n  },\n\n  getColumnOffset: (\n    props,\n    columnIndex,\n    alignment,\n    scrollLeft,\n    cache,\n    scrollBarWidth\n  ) =>\n    getOffset(\n      props,\n      columnIndex,\n      alignment,\n      scrollLeft,\n      cache,\n      'column',\n      scrollBarWidth\n    ),\n\n  getRowOffset: (\n    props,\n    rowIndex,\n    alignment,\n    scrollTop,\n    cache,\n    scrollBarWidth: number\n  ) =>\n    getOffset(\n      props,\n      rowIndex,\n      alignment,\n      scrollTop,\n      cache,\n      'row',\n      scrollBarWidth\n    ),\n\n  getColumnStartIndexForOffset: (props, scrollLeft, cache) =>\n    findItem(props, cache, scrollLeft, 'column'),\n\n  getColumnStopIndexForStartIndex: (props, startIndex, scrollLeft, cache) => {\n    const item = getItemFromCache(props, startIndex, cache, 'column')\n\n    const maxOffset = scrollLeft + (props.width as number)\n\n    let offset = item.offset + item.size\n    let stopIndex = startIndex\n    while (stopIndex < props.totalColumn - 1 && offset < maxOffset) {\n      stopIndex++\n      offset += getItemFromCache(props, startIndex, cache, 'column').size\n    }\n    return stopIndex\n  },\n\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n\n  getRowStartIndexForOffset: (props, scrollTop, cache) =>\n    findItem(props, cache, scrollTop, 'row'),\n\n  getRowStopIndexForStartIndex: (props, startIndex, scrollTop, cache) => {\n    const { totalRow, height } = props\n    const item = getItemFromCache(props, startIndex, cache, 'row')\n    const maxOffset = scrollTop + (height as number)\n\n    let offset = item.size + item.offset\n    let stopIndex = startIndex\n\n    while (stopIndex < totalRow - 1 && offset < maxOffset) {\n      stopIndex++\n      offset += getItemFromCache(props, stopIndex, cache, 'row').size\n    }\n\n    return stopIndex\n  },\n  injectToInstance: (instance, cache) => {\n    const resetAfter = (\n      { columnIndex, rowIndex }: Indices,\n      forceUpdate?: boolean\n    ) => {\n      forceUpdate = isUndefined(forceUpdate) ? true : forceUpdate\n\n      if (isNumber(columnIndex)) {\n        cache.value.lastVisitedColumnIndex = Math.min(\n          cache.value.lastVisitedColumnIndex,\n          columnIndex - 1\n        )\n      }\n\n      if (isNumber(rowIndex)) {\n        // console.log(rowIndex)\n        cache.value.lastVisitedRowIndex = Math.min(\n          cache.value.lastVisitedRowIndex,\n          rowIndex - 1\n        )\n      }\n\n      instance.exposed?.getItemStyleCache.value(-1, null, null)\n\n      if (forceUpdate) instance.proxy?.$forceUpdate()\n    }\n\n    const resetAfterColumnIndex = (\n      columnIndex: number,\n      forceUpdate: boolean\n    ) => {\n      resetAfter(\n        {\n          columnIndex,\n        },\n        forceUpdate\n      )\n    }\n\n    const resetAfterRowIndex = (rowIndex: number, forceUpdate: boolean) => {\n      resetAfter(\n        {\n          rowIndex,\n        },\n        forceUpdate\n      )\n    }\n\n    Object.assign(instance.proxy, {\n      resetAfterColumnIndex,\n      resetAfterRowIndex,\n      resetAfter,\n    })\n  },\n  initCache: ({\n    estimatedColumnWidth = DEFAULT_DYNAMIC_LIST_ITEM_SIZE,\n    estimatedRowHeight = DEFAULT_DYNAMIC_LIST_ITEM_SIZE,\n  }) => {\n    const cache = {\n      column: {},\n      estimatedColumnWidth,\n      estimatedRowHeight,\n      lastVisitedColumnIndex: -1,\n      lastVisitedRowIndex: -1,\n      row: {},\n    } as GridCache\n\n    // TODO: expose methods.\n    return cache\n  },\n\n  clearCache: false,\n\n  validateProps: ({ columnWidth, rowHeight }) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isFunction(columnWidth)) {\n        throwError(\n          SCOPE,\n          `\n          \"columnWidth\" must be passed as function,\n            instead ${typeof columnWidth} was given.\n        `\n        )\n      }\n\n      if (!isFunction(rowHeight)) {\n        throwError(\n          SCOPE,\n          `\n          \"rowHeight\" must be passed as function,\n            instead ${typeof rowHeight} was given.\n        `\n        )\n      }\n    }\n  },\n})\n\nexport default DynamicSizeGrid\n\nexport type ResetAfterIndex = (idx: number, forceUpdate: boolean) => void\nexport type ResetAfterIndices = (indices: Indices, forceUpdate: boolean) => void\n\nexport type DynamicSizeGridInstance = GridInstance & {\n  resetAfterColumnIndex: ResetAfterIndex\n  resetAfterRowIndex: ResetAfterIndex\n  resetAfter: ResetAfterIndices\n}\n", "import { definePropType, mutable } from '@element-plus/utils'\n\nimport type { CSSProperties } from 'vue'\nimport type { Column, KeyType } from './types'\n\nexport type AnyColumn = Column<any>\n\n/**\n * @Note even though we can use `string[] | string` as the type but for\n * convenience here we only use `string` as the acceptable value here.\n */\nexport const classType = String\n\nexport const columns = {\n  type: definePropType<AnyColumn[]>(Array),\n  required: true,\n} as const\n\nexport const column = {\n  type: definePropType<AnyColumn>(Object),\n} as const\n\nexport const fixedDataType = {\n  type: definePropType<any[]>(Array),\n} as const\n\nexport const dataType = {\n  ...fixedDataType,\n  required: true,\n} as const\n\nexport const expandColumnKey = String\n\nexport const expandKeys = {\n  type: definePropType<KeyType[]>(Array),\n  default: () => mutable([]),\n} as const\n\nexport const requiredNumber = {\n  type: Number,\n  required: true,\n} as const\n\nexport const rowKey = {\n  type: definePropType<KeyType>([String, Number, Symbol]),\n  default: 'id',\n} as const\n\n/**\n * @note even though we can use `StyleValue` but that would be difficult for us to mapping them,\n * so we only use `CSSProperties` as the acceptable value here.\n */\nexport const styleType = {\n  type: definePropType<CSSProperties>(Object),\n}\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { virtualizedGridProps } from '@element-plus/components/virtual-list'\nimport { columns, expandColumnKey, rowKey } from './common'\n\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { FixedDirection, KeyType, RowCommonParams } from './types'\n\nexport type RowExpandParams = {\n  expanded: boolean\n  rowKey: KeyType\n} & RowCommonParams\n\nexport type RowHoverParams = {\n  event: MouseEvent\n  hovered: boolean\n  rowKey: KeyType\n} & RowCommonParams\n\nexport type RowEventHandlerParams = {\n  rowKey: KeyType\n  event: Event\n} & RowCommonParams\n\nexport type RowHeightChangedParams = {\n  rowKey: KeyType\n  height: number\n  rowIndex: number\n}\n\nexport type RowExpandHandler = (params: RowExpandParams) => void\nexport type RowHoverHandler = (params: RowHoverParams) => void\nexport type RowEventHandler = (params: RowEventHandlerParams) => void\nexport type RowHeightChangeHandler = (\n  row: RowHeightChangedParams,\n  fixedDirection: boolean | FixedDirection | undefined\n) => void\n\nexport type RowEventHandlers = {\n  onClick?: RowEventHandler\n  onContextmenu?: RowEventHandler\n  onDblclick?: RowEventHandler\n  onMouseenter?: RowEventHandler\n  onMouseleave?: RowEventHandler\n}\n\nexport const tableV2RowProps = buildProps({\n  class: String,\n  columns,\n  columnsStyles: {\n    type: definePropType<Record<KeyType, CSSProperties>>(Object),\n    required: true,\n  },\n  depth: Number,\n  expandColumnKey,\n  estimatedRowHeight: {\n    ...virtualizedGridProps.estimatedRowHeight,\n    default: undefined,\n  },\n  isScrolling: Boolean,\n  onRowExpand: {\n    type: definePropType<RowExpandHandler>(Function),\n  },\n  onRowHover: {\n    type: definePropType<RowHoverHandler>(Function),\n  },\n  onRowHeightChange: {\n    type: definePropType<RowHeightChangeHandler>(Function),\n  },\n  rowData: {\n    type: definePropType<any>(Object),\n    required: true,\n  },\n  rowEventHandlers: {\n    type: definePropType<RowEventHandlers>(Object),\n  },\n  rowIndex: {\n    type: Number,\n    required: true,\n  },\n  /**\n   * Unique item key\n   */\n  rowKey,\n  style: {\n    type: definePropType<CSSProperties>(Object),\n  },\n} as const)\n\nexport type TableV2RowProps = ExtractPropTypes<typeof tableV2RowProps>\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { columns } from './common'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst requiredNumberType = {\n  type: Number,\n  required: true,\n} as const\n\nexport const tableV2HeaderProps = buildProps({\n  class: String,\n  columns,\n  fixedHeaderData: {\n    type: definePropType<any[]>(Array),\n  },\n  headerData: {\n    type: definePropType<any[]>(Array),\n    required: true,\n  },\n  headerHeight: {\n    type: definePropType<number | number[]>([Number, Array]),\n    default: 50,\n  },\n  rowWidth: requiredNumberType,\n  rowHeight: {\n    type: Number,\n    default: 50,\n  },\n  height: requiredNumberType,\n  width: requiredNumberType,\n} as const)\n\nexport type TableV2HeaderProps = ExtractPropTypes<typeof tableV2HeaderProps>\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  virtualizedGridProps,\n  virtualizedListProps,\n} from '@element-plus/components/virtual-list'\nimport {\n  classType,\n  columns,\n  dataType,\n  fixedDataType,\n  requiredNumber,\n  styleType,\n} from './common'\nimport { tableV2HeaderProps } from './header'\nimport { tableV2RowProps } from './row'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { ItemSize } from '@element-plus/components/virtual-list'\n\nexport type onRowRenderedParams = {\n  rowCacheStart: number\n  rowCacheEnd: number\n  rowVisibleStart: number\n  rowVisibleEnd: number\n}\n\nexport const tableV2GridProps = buildProps({\n  columns,\n  data: dataType,\n  fixedData: fixedDataType,\n  estimatedRowHeight: tableV2RowProps.estimatedRowHeight,\n\n  /**\n   * Size related attributes\n   */\n  width: requiredNumber,\n  height: requiredNumber,\n\n  headerWidth: requiredNumber,\n  headerHeight: tableV2HeaderProps.headerHeight,\n\n  bodyWidth: requiredNumber,\n  rowHeight: requiredNumber,\n\n  /**\n   * Special attributes\n   */\n  cache: virtualizedListProps.cache,\n  useIsScrolling: Boolean,\n  scrollbarAlwaysOn: virtualizedGridProps.scrollbarAlwaysOn,\n  scrollbarStartGap: virtualizedGridProps.scrollbarStartGap,\n  scrollbarEndGap: virtualizedGridProps.scrollbarEndGap,\n\n  /**\n   * CSS attributes\n   */\n  class: classType,\n  style: styleType,\n  containerStyle: styleType,\n\n  getRowHeight: {\n    type: definePropType<ItemSize>(Function),\n    required: true,\n  },\n  rowKey: tableV2RowProps.rowKey,\n\n  /**\n   * Event handlers\n   */\n  onRowsRendered: {\n    type: definePropType<(params: onRowRenderedParams) => void>(Function),\n  },\n  onScroll: {\n    type: definePropType<(...args: any[]) => void>(Function),\n  },\n} as const)\n\nexport type TableV2GridProps = ExtractPropTypes<typeof tableV2GridProps>\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  virtualizedGridProps,\n  virtualizedScrollbarProps,\n} from '@element-plus/components/virtual-list'\nimport {\n  classType,\n  columns,\n  dataType,\n  expandKeys,\n  fixedDataType,\n  requiredNumber,\n  rowKey,\n} from './common'\nimport { tableV2RowProps } from './row'\nimport { tableV2HeaderProps } from './header'\nimport { tableV2GridProps } from './grid'\n\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { SortOrder } from './constants'\nimport type {\n  Column,\n  ColumnCommonParams,\n  DataGetter,\n  KeyType,\n  RowCommonParams,\n  SortBy,\n  SortState,\n} from './types'\n\n/**\n * Param types\n */\nexport type ColumnSortParams<T> = {\n  column: Column<T>\n  key: KeyType\n  order: SortOrder\n}\n\n/**\n * Renderer/Getter types\n */\n\nexport type ExtraCellPropGetter<T> = (\n  params: ColumnCommonParams<T> &\n    RowCommonParams & { cellData: T; rowData: any }\n) => any\n\nexport type ExtractHeaderPropGetter<T> = (params: {\n  columns: Column<T>[]\n  headerIndex: number\n}) => any\n\nexport type ExtractHeaderCellPropGetter<T> = (\n  params: ColumnCommonParams<T> & { headerIndex: number }\n) => any\n\nexport type ExtractRowPropGetter<T> = (\n  params: { columns: Column<T>[] } & RowCommonParams\n) => any\n\nexport type HeaderClassNameGetter<T> = (params: {\n  columns: Column<T>[]\n  headerIndex: number\n}) => string\n\nexport type RowClassNameGetter<T> = (\n  params: { columns: Column<T>[] } & RowCommonParams\n) => string\n\n/**\n * Handler types\n */\nexport type ColumnSortHandler<T> = (params: ColumnSortParams<T>) => void\nexport type ColumnResizeHandler<T> = (column: Column<T>, width: number) => void\nexport type ExpandedRowsChangeHandler = (expandedRowKeys: KeyType[]) => void\n\nexport const tableV2Props = buildProps({\n  cache: tableV2GridProps.cache,\n  estimatedRowHeight: tableV2RowProps.estimatedRowHeight,\n  rowKey,\n  // Header attributes\n  headerClass: {\n    type: definePropType<string | HeaderClassNameGetter<any>>([\n      String,\n      Function,\n    ]),\n  },\n  headerProps: {\n    type: definePropType<any | ExtractHeaderPropGetter<any>>([\n      Object,\n      Function,\n    ]),\n  },\n  headerCellProps: {\n    type: definePropType<any | ExtractHeaderCellPropGetter<any>>([\n      Object,\n      Function,\n    ]),\n  },\n  headerHeight: tableV2HeaderProps.headerHeight,\n  /**\n   * Footer attributes\n   */\n  footerHeight: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * Row attributes\n   */\n  rowClass: {\n    type: definePropType<string | RowClassNameGetter<any>>([String, Function]),\n  },\n  rowProps: {\n    type: definePropType<ExtractRowPropGetter<any> | any>([Object, Function]),\n  },\n  rowHeight: {\n    type: Number,\n    default: 50,\n  },\n\n  /**\n   * Cell attributes\n   */\n  cellProps: {\n    type: definePropType<Record<string, any> | ExtraCellPropGetter<any>>([\n      Object,\n      Function,\n    ]),\n  },\n  /**\n   * Data models\n   */\n  columns,\n  data: dataType,\n  dataGetter: {\n    type: definePropType<DataGetter<any>>(Function),\n  },\n  fixedData: fixedDataType,\n  /**\n   * Expanded keys\n   */\n  expandColumnKey: tableV2RowProps.expandColumnKey,\n  expandedRowKeys: expandKeys,\n  defaultExpandedRowKeys: expandKeys,\n\n  /**\n   * Attributes\n   */\n  class: classType,\n  // disabled: Boolean,\n  fixed: Boolean,\n  style: {\n    type: definePropType<CSSProperties>(Object),\n  },\n  width: requiredNumber,\n  height: requiredNumber,\n  maxHeight: Number,\n  useIsScrolling: Boolean,\n  indentSize: {\n    type: Number,\n    default: 12,\n  },\n  iconSize: {\n    type: Number,\n    default: 12,\n  },\n  hScrollbarSize: virtualizedGridProps.hScrollbarSize,\n  vScrollbarSize: virtualizedGridProps.vScrollbarSize,\n  scrollbarAlwaysOn: virtualizedScrollbarProps.alwaysOn,\n\n  /**\n   * Sorting\n   */\n  sortBy: {\n    type: definePropType<SortBy>(Object),\n    default: () => ({} as { key: KeyType; order: SortOrder }),\n  },\n  sortState: {\n    type: definePropType<SortState>(Object),\n    default: undefined,\n  },\n\n  /**\n   * Handlers\n   */\n  onColumnSort: {\n    type: definePropType<ColumnSortHandler<any>>(Function),\n  },\n  onExpandedRowsChange: {\n    type: definePropType<ExpandedRowsChangeHandler>(Function),\n  },\n  onEndReached: {\n    type: definePropType<(distance: number) => void>(Function),\n  },\n  onRowExpand: tableV2RowProps.onRowExpand,\n  onScroll: tableV2GridProps.onScroll,\n  onRowsRendered: tableV2GridProps.onRowsRendered,\n  rowEventHandlers: tableV2RowProps.rowEventHandlers,\n} as const)\n\nexport type TableV2Props = ExtractPropTypes<typeof tableV2Props>\n", "import type { FunctionalComponent } from 'vue'\nimport type { TableV2CellProps } from '../cell'\n\nconst TableV2Cell: FunctionalComponent<TableV2CellProps> = (\n  props: TableV2CellProps,\n  { slots }\n) => {\n  const { cellData, style } = props\n  const displayText = cellData?.toString?.() || ''\n  return (\n    <div class={props.class} title={displayText} style={style}>\n      {slots.default ? slots.default(props) : displayText}\n    </div>\n  )\n}\n\nTableV2Cell.displayName = 'ElTableV2Cell'\nTableV2Cell.inheritAttrs = false\n\nexport default TableV2Cell\n", "import type { FunctionalComponent } from 'vue'\nimport type { TableV2HeaderCell } from '../header-cell'\n\nconst HeaderCell: FunctionalComponent<TableV2HeaderCell> = (props, { slots }) =>\n  slots.default ? (\n    slots.default(props)\n  ) : (\n    <div class={props.class} title={props.column?.title}>\n      {props.column?.title}\n    </div>\n  )\n\nHeaderCell.displayName = 'ElTableV2HeaderCell'\nHeaderCell.inheritAttrs = false\n\nexport default HeaderCell\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { columns } from './common'\n\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { KeyType } from './types'\n\nexport const tableV2HeaderRowProps = buildProps({\n  class: String,\n  columns,\n  columnsStyles: {\n    type: definePropType<Record<KeyType, CSSProperties>>(Object),\n    required: true,\n  },\n  headerIndex: Number,\n  style: { type: definePropType<CSSProperties>(Object) },\n} as const)\n\nexport type TableV2HeaderRowProps = ExtractPropTypes<\n  typeof tableV2HeaderRowProps\n>\n", "import { defineComponent } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { tableV2HeaderRowProps } from '../header-row'\n\nimport type { CSSProperties } from 'vue'\nimport type { ColumnCellsType } from '../types'\nimport type { TableV2HeaderRowProps } from '../header-row'\n\nconst TableV2HeaderRow = defineComponent({\n  name: 'ElTableV2HeaderRow',\n  props: tableV2HeaderRowProps,\n  setup(props, { slots }) {\n    return () => {\n      const { columns, columnsStyles, headerIndex, style } = props\n      let Cells: ColumnCellsType = columns.map((column, columnIndex) => {\n        return slots.cell!({\n          columns,\n          column,\n          columnIndex,\n          headerIndex,\n          style: columnsStyles[column.key],\n        })\n      })\n\n      if (slots.header) {\n        Cells = slots.header({\n          cells: Cells.map((node) => {\n            if (isArray(node) && node.length === 1) {\n              return node[0]\n            }\n            return node\n          }),\n          columns,\n          headerIndex,\n        })\n      }\n\n      return (\n        <div class={props.class} style={style} role=\"row\">\n          {Cells}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2HeaderRow\n\nexport type TableV2HeaderRowCellRendererParams = {\n  columns: TableV2HeaderRowProps['columns']\n  column: TableV2HeaderRowProps['columns'][number]\n  columnIndex: number\n  headerIndex: number\n  style: CSSProperties\n}\n\nexport type TableV2HeaderRowRendererParams = {\n  cells: ColumnCellsType\n  columns: TableV2HeaderRowProps['columns']\n  headerIndex: number\n}\n", "import { computed, defineComponent, nextTick, ref, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { ensureArray } from '@element-plus/utils'\nimport { tableV2HeaderProps } from '../header'\nimport { enforceUnit } from '../utils'\n\nimport type { CSSProperties, UnwrapRef } from 'vue'\nimport type { TableV2HeaderProps } from '../header'\nimport type { UseColumnsReturn } from '../composables/use-columns'\n\nconst COMPONENT_NAME = 'ElTableV2Header'\nconst TableV2Header = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2HeaderProps,\n  setup(props, { slots, expose }) {\n    const ns = useNamespace('table-v2')\n\n    const headerRef = ref<HTMLElement>()\n\n    const headerStyle = computed(() =>\n      enforceUnit({\n        width: props.width,\n        height: props.height,\n      })\n    )\n\n    const rowStyle = computed(() =>\n      enforceUnit({\n        width: props.rowWidth,\n        height: props.height,\n      })\n    )\n\n    const headerHeights = computed(() => ensureArray(unref(props.headerHeight)))\n\n    const scrollToLeft = (left?: number) => {\n      const headerEl = unref(headerRef)\n      nextTick(() => {\n        headerEl?.scroll &&\n          headerEl.scroll({\n            left,\n          })\n      })\n    }\n\n    const renderFixedRows = () => {\n      const fixedRowClassName = ns.e('fixed-header-row')\n\n      const { columns, fixedHeaderData, rowHeight } = props\n\n      return fixedHeaderData?.map((fixedRowData, fixedRowIndex) => {\n        const style: CSSProperties = enforceUnit({\n          height: rowHeight,\n          width: '100%',\n        })\n\n        return slots.fixed?.({\n          class: fixedRowClassName,\n          columns,\n          rowData: fixedRowData,\n          rowIndex: -(fixedRowIndex + 1),\n          style,\n        })\n      })\n    }\n\n    const renderDynamicRows = () => {\n      const dynamicRowClassName = ns.e('dynamic-header-row')\n      const { columns } = props\n\n      return unref(headerHeights).map((rowHeight, rowIndex) => {\n        const style: CSSProperties = enforceUnit({\n          width: '100%',\n          height: rowHeight,\n        })\n\n        return slots.dynamic?.({\n          class: dynamicRowClassName,\n          columns,\n          headerIndex: rowIndex,\n          style,\n        })\n      })\n    }\n\n    expose({\n      /**\n       * @description scroll to position based on the provided value\n       */\n      scrollToLeft,\n    })\n\n    return () => {\n      if (props.height <= 0) return\n\n      return (\n        <div\n          ref={headerRef}\n          class={props.class}\n          style={unref(headerStyle)}\n          role=\"rowgroup\"\n        >\n          <div style={unref(rowStyle)} class={ns.e('header')}>\n            {renderDynamicRows()}\n            {renderFixedRows()}\n          </div>\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2Header\n\nexport type TableV2HeaderInstance = InstanceType<typeof TableV2Header> & {\n  /**\n   * @description scroll to position based on the provided value\n   */\n  scrollToLeft: (left?: number) => void\n}\n\nexport type TableV2HeaderRendererParams = {\n  class: string\n  columns: TableV2HeaderProps['columns']\n  columnsStyles: UnwrapRef<UseColumnsReturn['columnsStyles']>\n  headerIndex: number\n  style: CSSProperties\n}\n\nexport type TableV2HeaderRowRendererParams = {\n  rowData: any\n  rowIndex: number\n} & Omit<TableV2HeaderRendererParams, 'headerIndex'>\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  ref,\n  unref,\n} from 'vue'\nimport { isArray, isFunction, isNumber } from '@element-plus/utils'\nimport { tableV2RowProps } from '../row'\nimport { TableV2InjectionKey } from '../tokens'\nimport { placeholderSign } from '../private'\n\nimport type { CSSProperties, RendererElement, RendererNode, VNode } from 'vue'\nimport type { RowEventHandlers, TableV2RowProps } from '../row'\n\ntype CustomizedCellsType = VNode<\n  RendererNode,\n  RendererElement,\n  {\n    [key: string]: any\n  }\n>[]\n\ntype DefaultCellsType = VNode<\n  RendererNode,\n  RendererElement,\n  {\n    [key: string]: any\n  }\n>[][]\n\ntype ColumnCellsType = DefaultCellsType | CustomizedCellsType\n\nconst useTableRow = (props: TableV2RowProps) => {\n  const { isScrolling } = inject(TableV2InjectionKey)!\n\n  const measured = ref(false)\n  const rowRef = ref<HTMLElement>()\n  const measurable = computed(() => {\n    return isNumber(props.estimatedRowHeight) && props.rowIndex >= 0\n  })\n\n  const doMeasure = (isInit = false) => {\n    const $rowRef = unref(rowRef)\n    if (!$rowRef) return\n    const { columns, onRowHeightChange, rowKey, rowIndex, style } = props\n    const { height } = $rowRef.getBoundingClientRect()\n    measured.value = true\n\n    nextTick(() => {\n      if (isInit || height !== Number.parseInt(style!.height as string)) {\n        const firstColumn = columns[0]\n        const isPlaceholder = firstColumn?.placeholderSign === placeholderSign\n        onRowHeightChange?.(\n          { rowKey, height, rowIndex },\n          firstColumn && !isPlaceholder && firstColumn.fixed\n        )\n      }\n    })\n  }\n\n  const eventHandlers = computed(() => {\n    const { rowData, rowIndex, rowKey, onRowHover } = props\n    const handlers = props.rowEventHandlers || ({} as RowEventHandlers)\n    const eventHandlers = {} as {\n      [key in keyof RowEventHandlers]: (e: Event) => void\n    }\n\n    Object.entries(handlers).forEach(([eventName, handler]) => {\n      if (isFunction(handler)) {\n        eventHandlers[eventName as keyof RowEventHandlers] = (event: Event) => {\n          handler({\n            event,\n            rowData,\n            rowIndex,\n            rowKey,\n          })\n        }\n      }\n    })\n\n    if (onRowHover) {\n      ;(\n        [\n          { name: 'onMouseleave', hovered: false },\n          { name: 'onMouseenter', hovered: true },\n        ] as const\n      ).forEach(({ name, hovered }) => {\n        const existedHandler = eventHandlers[name]\n        eventHandlers[name] = ((event: MouseEvent) => {\n          onRowHover({\n            event,\n            hovered,\n            rowData,\n            rowIndex,\n            rowKey,\n          })\n\n          existedHandler?.(event)\n        }) as any\n      })\n    }\n    return eventHandlers\n  })\n\n  const onExpand = (expanded: boolean) => {\n    const { onRowExpand, rowData, rowIndex, rowKey } = props\n\n    onRowExpand?.({\n      expanded,\n      rowData,\n      rowIndex,\n      rowKey,\n    })\n  }\n\n  onMounted(() => {\n    if (unref(measurable)) {\n      doMeasure(true)\n    }\n  })\n\n  return { isScrolling, measurable, measured, rowRef, eventHandlers, onExpand }\n}\n\nconst COMPONENT_NAME = 'ElTableV2TableRow'\n\nconst TableV2Row = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2RowProps,\n  setup(props, { expose, slots, attrs }) {\n    const {\n      eventHandlers,\n      isScrolling,\n      measurable,\n      measured,\n      rowRef,\n\n      onExpand,\n    } = useTableRow(props)\n\n    expose({\n      /**\n       * @description manually dispatching expand action on row.\n       */\n      onExpand,\n    })\n\n    return () => {\n      const {\n        columns,\n        columnsStyles,\n        expandColumnKey,\n        depth,\n        rowData,\n        rowIndex,\n        style,\n      } = props\n\n      let ColumnCells: ColumnCellsType = columns.map((column, columnIndex) => {\n        const expandable =\n          isArray(rowData.children) &&\n          rowData.children.length > 0 &&\n          column.key === expandColumnKey\n\n        return slots.cell!({\n          column,\n          columns,\n          columnIndex,\n          depth,\n          style: columnsStyles[column.key],\n          rowData,\n          rowIndex,\n          isScrolling: unref(isScrolling),\n          expandIconProps: expandable\n            ? {\n                rowData,\n                rowIndex,\n                onExpand,\n              }\n            : undefined,\n        })\n      })\n\n      if (slots.row) {\n        ColumnCells = slots.row({\n          cells: ColumnCells.map((node) => {\n            if (isArray(node) && node.length === 1) {\n              return node[0]\n            }\n            return node\n          }),\n          style,\n          columns,\n          depth,\n          rowData,\n          rowIndex,\n          isScrolling: unref(isScrolling),\n        })\n      }\n\n      if (unref(measurable)) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { height, ...exceptHeightStyle } = style || {}\n        const _measured = unref(measured)\n        return (\n          <div\n            ref={rowRef}\n            class={props.class}\n            style={_measured ? style : exceptHeightStyle}\n            role=\"row\"\n            {...attrs}\n            {...unref(eventHandlers)}\n          >\n            {ColumnCells}\n          </div>\n        )\n      }\n\n      return (\n        <div\n          {...attrs}\n          ref={rowRef}\n          class={props.class}\n          style={style}\n          role=\"row\"\n          {...unref(eventHandlers)}\n        >\n          {ColumnCells}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2Row\n\nexport type TableV2RowCellRenderParam = {\n  column: TableV2RowProps['columns'][number]\n  columns: TableV2RowProps['columns']\n  columnIndex: number\n  depth: number\n  style: CSSProperties\n  rowData: any\n  rowIndex: number\n  isScrolling: boolean\n  expandIconProps?: {\n    rowData: any\n    rowIndex: number\n    onExpand: (expand: boolean) => void\n  }\n}\n", "import ElIcon from '@element-plus/components/icon'\nimport { SortDown, SortUp } from '@element-plus/icons-vue'\nimport { SortOrder } from '../constants'\n\nimport type { FunctionalComponent } from 'vue'\n\nexport type SortIconProps = {\n  sortOrder: SortOrder\n  class?: JSX.IntrinsicAttributes['class']\n}\n\nconst SortIcon: FunctionalComponent<SortIconProps> = (props) => {\n  const { sortOrder } = props\n\n  return (\n    <ElIcon size={14} class={props.class}>\n      {sortOrder === SortOrder.ASC ? <SortUp /> : <SortDown />}\n    </ElIcon>\n  )\n}\n\nexport default SortIcon\n", "import ElIcon from '@element-plus/components/icon'\nimport { ArrowRight } from '@element-plus/icons-vue'\n\nimport type { StyleValue } from 'vue'\nimport type { TableV2RowCellRenderParam } from './row'\n\nconst ExpandIcon = (\n  props: TableV2RowCellRenderParam['expandIconProps'] & {\n    class?: string | string[]\n    style: StyleValue\n    size: number\n    expanded: boolean\n    expandable: boolean\n  }\n) => {\n  const { expanded, expandable, onExpand, style, size } = props\n\n  const expandIconProps = {\n    onClick: expandable ? () => onExpand(!expanded) : undefined,\n    class: props.class,\n  } as any\n\n  return (\n    <ElIcon {...expandIconProps} size={size} style={style}>\n      <ArrowRight />\n    </ElIcon>\n  )\n}\n\nexport default ExpandIcon\n\nexport type ExpandIconInstance = ReturnType<typeof ExpandIcon>\n", "import { computed, defineComponent, inject, ref, unref } from 'vue'\nimport {\n  DynamicSizeGrid,\n  FixedSizeGrid,\n} from '@element-plus/components/virtual-list'\nimport { isNumber, isObject } from '@element-plus/utils'\nimport { Header } from './components'\nimport { TableV2InjectionKey } from './tokens'\nimport { tableV2GridProps } from './grid'\nimport { sum } from './utils'\n\nimport type { UnwrapRef } from 'vue'\nimport type {\n  DynamicSizeGridInstance,\n  GridDefaultSlotParams,\n  GridItemKeyGetter,\n  GridItemRenderedEvtParams,\n  GridScrollOptions,\n  ResetAfterIndex,\n  Alignment as ScrollStrategy,\n} from '@element-plus/components/virtual-list'\nimport type { TableV2HeaderInstance } from './components'\nimport type { TableV2GridProps } from './grid'\n\nconst COMPONENT_NAME = 'ElTableV2Grid'\n\nconst useTableGrid = (props: TableV2GridProps) => {\n  const headerRef = ref<TableV2HeaderInstance>()\n  const bodyRef = ref<DynamicSizeGridInstance>()\n\n  const totalHeight = computed(() => {\n    const { data, rowHeight, estimatedRowHeight } = props\n\n    if (estimatedRowHeight) {\n      return\n    }\n\n    return data.length * (rowHeight as number)\n  })\n\n  const fixedRowHeight = computed(() => {\n    const { fixedData, rowHeight } = props\n\n    return (fixedData?.length || 0) * (rowHeight as number)\n  })\n\n  const headerHeight = computed(() => sum(props.headerHeight))\n\n  const gridHeight = computed(() => {\n    const { height } = props\n    return Math.max(0, height - unref(headerHeight) - unref(fixedRowHeight))\n  })\n\n  const hasHeader = computed(() => {\n    return unref(headerHeight) + unref(fixedRowHeight) > 0\n  })\n\n  const itemKey: GridItemKeyGetter = ({ data, rowIndex }) =>\n    data[rowIndex][props.rowKey]\n\n  function onItemRendered({\n    rowCacheStart,\n    rowCacheEnd,\n    rowVisibleStart,\n    rowVisibleEnd,\n  }: GridItemRenderedEvtParams) {\n    props.onRowsRendered?.({\n      rowCacheStart,\n      rowCacheEnd,\n      rowVisibleStart,\n      rowVisibleEnd,\n    })\n  }\n\n  function resetAfterRowIndex(index: number, forceUpdate: boolean) {\n    bodyRef.value?.resetAfterRowIndex(index, forceUpdate)\n  }\n\n  function scrollTo(x: number, y: number): void\n  function scrollTo(options: GridScrollOptions): void\n  function scrollTo(leftOrOptions: number | GridScrollOptions, top?: number) {\n    const header$ = unref(headerRef)\n    const body$ = unref(bodyRef)\n\n    if (!header$ || !body$) return\n\n    if (isObject(leftOrOptions)) {\n      header$.scrollToLeft(leftOrOptions.scrollLeft)\n      body$.scrollTo(leftOrOptions)\n    } else {\n      header$.scrollToLeft(leftOrOptions)\n      body$.scrollTo({\n        scrollLeft: leftOrOptions,\n        scrollTop: top,\n      })\n    }\n  }\n\n  function scrollToTop(scrollTop: number) {\n    unref(bodyRef)?.scrollTo({\n      scrollTop,\n    })\n  }\n\n  function scrollToRow(row: number, strategy: ScrollStrategy) {\n    unref(bodyRef)?.scrollToItem(row, 1, strategy)\n  }\n\n  function forceUpdate() {\n    unref(bodyRef)?.$forceUpdate()\n    unref(headerRef)?.$forceUpdate()\n  }\n\n  return {\n    bodyRef,\n    forceUpdate,\n    fixedRowHeight,\n    gridHeight,\n    hasHeader,\n    headerHeight,\n    headerRef,\n    totalHeight,\n\n    itemKey,\n    onItemRendered,\n    resetAfterRowIndex,\n    scrollTo,\n    scrollToTop,\n    scrollToRow,\n  }\n}\n\nconst TableGrid = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2GridProps,\n  setup(props, { slots, expose }) {\n    const { ns } = inject(TableV2InjectionKey)!\n\n    const {\n      bodyRef,\n      fixedRowHeight,\n      gridHeight,\n      hasHeader,\n      headerRef,\n      headerHeight,\n      totalHeight,\n\n      forceUpdate,\n      itemKey,\n      onItemRendered,\n      resetAfterRowIndex,\n      scrollTo,\n      scrollToTop,\n      scrollToRow,\n    } = useTableGrid(props)\n\n    expose({\n      forceUpdate,\n      /**\n       * @description fetch total height\n       */\n      totalHeight,\n      /**\n       * @description scroll to a position\n       */\n      scrollTo,\n      /**\n       * @description scroll vertically to position y\n       */\n      scrollToTop,\n      /**\n       * @description scroll to a given row\n       * @params row {Number} which row to scroll to\n       * @params strategy {ScrollStrategy} use what strategy to scroll to\n       */\n      scrollToRow,\n      /**\n       * @description reset rendered state after row index\n       */\n      resetAfterRowIndex,\n    })\n\n    const getColumnWidth = () => props.bodyWidth\n\n    return () => {\n      const {\n        cache,\n        columns,\n        data,\n        fixedData,\n        useIsScrolling,\n        scrollbarAlwaysOn,\n        scrollbarEndGap,\n        scrollbarStartGap,\n        style,\n        rowHeight,\n        bodyWidth,\n        estimatedRowHeight,\n        headerWidth,\n        height,\n        width,\n\n        getRowHeight,\n        onScroll,\n      } = props\n\n      const isDynamicRowEnabled = isNumber(estimatedRowHeight)\n      const Grid = isDynamicRowEnabled ? DynamicSizeGrid : FixedSizeGrid\n      const _headerHeight = unref(headerHeight)\n\n      return (\n        <div role=\"table\" class={[ns.e('table'), props.class]} style={style}>\n          <Grid\n            ref={bodyRef}\n            // special attrs\n            data={data}\n            useIsScrolling={useIsScrolling}\n            itemKey={itemKey}\n            // column attrs\n            columnCache={0}\n            columnWidth={isDynamicRowEnabled ? getColumnWidth : bodyWidth}\n            totalColumn={1}\n            // row attrs\n            totalRow={data.length}\n            rowCache={cache}\n            rowHeight={isDynamicRowEnabled ? getRowHeight : rowHeight}\n            // DOM attrs\n            width={width}\n            height={unref(gridHeight)}\n            class={ns.e('body')}\n            role=\"rowgroup\"\n            scrollbarStartGap={scrollbarStartGap}\n            scrollbarEndGap={scrollbarEndGap}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            // handlers\n            onScroll={onScroll}\n            onItemRendered={onItemRendered}\n            perfMode={false}\n          >\n            {{\n              default: (params: GridDefaultSlotParams) => {\n                const rowData = data[params.rowIndex]\n                return slots.row?.({\n                  ...params,\n                  columns,\n                  rowData,\n                })\n              },\n            }}\n          </Grid>\n          {unref(hasHeader) && (\n            <Header\n              ref={headerRef}\n              class={ns.e('header-wrapper')}\n              columns={columns}\n              headerData={data}\n              headerHeight={props.headerHeight}\n              fixedHeaderData={fixedData}\n              rowWidth={headerWidth}\n              rowHeight={rowHeight}\n              width={width}\n              height={Math.min(_headerHeight + unref(fixedRowHeight), height)}\n            >\n              {{\n                dynamic: slots.header,\n                fixed: slots.row,\n              }}\n            </Header>\n          )}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableGrid\n\nexport type TableGridRowSlotParams = {\n  columns: TableV2GridProps['columns']\n  rowData: any\n} & GridDefaultSlotParams\n\nexport type TableGridInstance = InstanceType<typeof TableGrid> &\n  UnwrapRef<{\n    forceUpdate: () => void\n    /**\n     * @description fetch total height\n     */\n    totalHeight: number\n\n    /**\n     * @description scrollTo a position\n     * @param { number | ScrollToOptions } arg1\n     * @param { number } arg2\n     */\n    scrollTo(leftOrOptions: number | GridScrollOptions, top?: number): void\n\n    /**\n     * @description scroll vertically to position y\n     */\n    scrollToTop(scrollTop: number): void\n    /**\n     * @description scroll to a given row\n     * @params row {Number} which row to scroll to\n     * @params @optional strategy {ScrollStrategy} use what strategy to scroll to\n     */\n    scrollToRow(row: number, strategy: ScrollStrategy): void\n    /**\n     * @description reset rendered state after row index\n     * @param { number } rowIndex\n     * @param { boolean } forceUpdate\n     */\n    resetAfterRowIndex: ResetAfterIndex\n  }>\n", "import Table from '../table-grid'\n\nimport type { FunctionalComponent, Ref } from 'vue'\nimport type { TableV2GridProps } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\nexport type MainTableRendererProps = TableV2GridProps & {\n  mainTableRef: Ref<TableGridInstance | undefined>\n}\n\nconst MainTable: FunctionalComponent<MainTableRendererProps> = (\n  props: MainTableRendererProps,\n  { slots }\n) => {\n  const { mainTableRef, ...rest } = props\n  return (\n    <Table ref={mainTableRef} {...rest}>\n      {slots}\n    </Table>\n  )\n}\n\nexport default MainTable\n", "import Table from '../table-grid'\n\nimport type { FunctionalComponent, Ref } from 'vue'\nimport type { TableV2GridProps } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\ntype LeftTableProps = TableV2GridProps & {\n  leftTableRef: Ref<TableGridInstance | undefined>\n}\n\nconst LeftTable: FunctionalComponent<LeftTableProps> = (props, { slots }) => {\n  if (!props.columns.length) return\n\n  const { leftTableRef, ...rest } = props\n\n  return (\n    <Table ref={leftTableRef} {...rest}>\n      {slots}\n    </Table>\n  )\n}\n\nexport default LeftTable\n", "import Table from '../table-grid'\n\nimport type { FunctionalComponent, Ref } from 'vue'\nimport type { TableV2GridProps } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\ntype LeftTableProps = TableV2GridProps & {\n  rightTableRef: Ref<TableGridInstance | undefined>\n}\n\nconst LeftTable: FunctionalComponent<LeftTableProps> = (props, { slots }) => {\n  if (!props.columns.length) return\n\n  const { rightTableRef, ...rest } = props\n\n  return (\n    <Table ref={rightTableRef} {...rest}>\n      {slots}\n    </Table>\n  )\n}\n\nexport default LeftTable\n", "import { Row } from '../components'\nimport { tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\nimport type { TableGridRowSlotParams } from '../table-grid'\n\ntype RowRendererProps = TableGridRowSlotParams &\n  Pick<\n    TableV2Props,\n    | 'expandColumnKey'\n    | 'estimatedRowHeight'\n    | 'rowProps'\n    | 'rowClass'\n    | 'rowKey'\n    | 'rowEventHandlers'\n  > &\n  UnwrapNestedRefs<\n    Pick<\n      UseTableReturn,\n      | 'depthMap'\n      | 'expandedRowKeys'\n      | 'hasFixedColumns'\n      | 'hoveringRowKey'\n      | 'onRowHovered'\n      | 'onRowExpanded'\n      | 'columnsStyles'\n    >\n  > & {\n    ns: UseNamespaceReturn\n  }\n\nconst RowRenderer: FunctionalComponent<RowRendererProps> = (\n  props,\n  { slots }\n) => {\n  const {\n    columns,\n    columnsStyles,\n    depthMap,\n    expandColumnKey,\n    expandedRowKeys,\n    estimatedRowHeight,\n    hasFixedColumns,\n    hoveringRowKey,\n    rowData,\n    rowIndex,\n    style,\n    isScrolling,\n    rowProps,\n    rowClass,\n    rowKey,\n    rowEventHandlers,\n    ns,\n    onRowHovered,\n    onRowExpanded,\n  } = props\n\n  const rowKls = tryCall(rowClass, { columns, rowData, rowIndex }, '')\n  const additionalProps = tryCall(rowProps, {\n    columns,\n    rowData,\n    rowIndex,\n  })\n  const _rowKey = rowData[rowKey]\n  const depth = depthMap[_rowKey] || 0\n  const canExpand = Boolean(expandColumnKey)\n  const isFixedRow = rowIndex < 0\n  const kls = [\n    ns.e('row'),\n    rowKls,\n    {\n      [ns.e(`row-depth-${depth}`)]: canExpand && rowIndex >= 0,\n      [ns.is('expanded')]: canExpand && expandedRowKeys.includes(_rowKey),\n      [ns.is('hovered')]: !isScrolling && _rowKey === hoveringRowKey,\n      [ns.is('fixed')]: !depth && isFixedRow,\n      [ns.is('customized')]: Boolean(slots.row),\n    },\n  ]\n\n  const onRowHover = hasFixedColumns ? onRowHovered : undefined\n\n  const _rowProps = {\n    ...additionalProps,\n    columns,\n    columnsStyles,\n    class: kls,\n    depth,\n    expandColumnKey,\n    estimatedRowHeight: isFixedRow ? undefined : estimatedRowHeight,\n    isScrolling,\n    rowIndex,\n    rowData,\n    rowKey: _rowKey,\n    rowEventHandlers,\n    style,\n  }\n\n  return (\n    <Row {..._rowProps} onRowHover={onRowHover} onRowExpand={onRowExpanded}>\n      {slots}\n    </Row>\n  )\n}\n\nexport default RowRenderer\n", "import { get } from 'lodash-unified'\nimport { isFunction, isObject } from '@element-plus/utils'\nimport { ExpandIcon, TableCell } from '../components'\nimport { Alignment } from '../constants'\nimport { placeholderSign } from '../private'\nimport { componentToSlot, enforceUnit, tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs, VNode } from 'vue'\nimport type { CellRendererParams } from '../types'\nimport type { TableV2RowCellRenderParam } from '../components'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\n\ntype CellRendererProps = TableV2RowCellRenderParam &\n  Pick<\n    TableV2Props,\n    'cellProps' | 'expandColumnKey' | 'indentSize' | 'iconSize' | 'rowKey'\n  > &\n  UnwrapNestedRefs<Pick<UseTableReturn, 'expandedRowKeys'>> & {\n    ns: UseNamespaceReturn\n  }\n\nconst CellRenderer: FunctionalComponent<CellRendererProps> = (\n  {\n    // renderer props\n    columns,\n    column,\n    columnIndex,\n    depth,\n    expandIconProps,\n    isScrolling,\n    rowData,\n    rowIndex,\n    // from use-table\n    style,\n    expandedRowKeys,\n    ns,\n    // derived props\n    cellProps: _cellProps,\n    expandColumnKey,\n    indentSize,\n    iconSize,\n    rowKey,\n  },\n  { slots }\n) => {\n  const cellStyle = enforceUnit(style)\n\n  if (column.placeholderSign === placeholderSign) {\n    return <div class={ns.em('row-cell', 'placeholder')} style={cellStyle} />\n  }\n  const { cellRenderer, dataKey, dataGetter } = column\n\n  const columnCellRenderer = componentToSlot(cellRenderer)\n\n  const CellComponent =\n    columnCellRenderer ||\n    slots.default ||\n    ((props: CellRendererParams<any>) => <TableCell {...props} />)\n\n  const cellData = isFunction(dataGetter)\n    ? dataGetter({ columns, column, columnIndex, rowData, rowIndex })\n    : get(rowData, dataKey ?? '')\n\n  const extraCellProps = tryCall(_cellProps, {\n    cellData,\n    columns,\n    column,\n    columnIndex,\n    rowIndex,\n    rowData,\n  })\n\n  const cellProps = {\n    class: ns.e('cell-text'),\n    columns,\n    column,\n    columnIndex,\n    cellData,\n    isScrolling,\n    rowData,\n    rowIndex,\n  }\n\n  const Cell = CellComponent(cellProps)\n\n  const kls = [\n    ns.e('row-cell'),\n    column.class,\n    column.align === Alignment.CENTER && ns.is('align-center'),\n    column.align === Alignment.RIGHT && ns.is('align-right'),\n  ]\n\n  const expandable = rowIndex >= 0 && column.key === expandColumnKey\n  const expanded = rowIndex >= 0 && expandedRowKeys.includes(rowData[rowKey])\n\n  let IconOrPlaceholder: VNode | undefined\n  const iconStyle = `margin-inline-start: ${depth * indentSize}px;`\n  if (expandable) {\n    if (isObject(expandIconProps)) {\n      IconOrPlaceholder = (\n        <ExpandIcon\n          {...expandIconProps}\n          class={[ns.e('expand-icon'), ns.is('expanded', expanded)]}\n          size={iconSize}\n          expanded={expanded}\n          style={iconStyle}\n          expandable\n        />\n      )\n    } else {\n      IconOrPlaceholder = (\n        <div\n          style={[\n            iconStyle,\n            `width: ${iconSize}px; height: ${iconSize}px;`,\n          ].join(' ')}\n        />\n      )\n    }\n  }\n\n  return (\n    <div class={kls} style={cellStyle} {...extraCellProps} role=\"cell\">\n      {IconOrPlaceholder}\n      {Cell}\n    </div>\n  )\n}\n\nCellRenderer.inheritAttrs = false\n\nexport default CellRenderer\n", "import { HeaderRow } from '../components'\nimport { tryCall } from '../utils'\n\nimport type { FunctionalComponent } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { TableV2HeaderRendererParams } from '../components'\nimport type { TableV2Props } from '../table'\n\ntype HeaderRendererProps = TableV2HeaderRendererParams &\n  Pick<TableV2Props, 'headerClass' | 'headerProps'> & {\n    ns: UseNamespaceReturn\n  }\n\nconst HeaderRenderer: FunctionalComponent<HeaderRendererProps> = (\n  {\n    columns,\n    columnsStyles,\n    headerIndex,\n    style,\n    // derived from root\n    headerClass,\n    headerProps,\n\n    ns,\n  },\n  { slots }\n) => {\n  const param = { columns, headerIndex }\n\n  const kls = [\n    ns.e('header-row'),\n    tryCall(headerClass, param, ''),\n    {\n      // [ns.is('resizing')]: Boolean(resizingKey),\n      [ns.is('customized')]: Boolean(slots.header),\n    },\n  ]\n\n  const extraProps = {\n    ...tryCall(headerProps, param),\n    columnsStyles,\n    class: kls,\n    columns,\n    headerIndex,\n    style,\n  }\n\n  return <HeaderRow {...extraProps}>{slots}</HeaderRow>\n}\n\nexport default HeaderRenderer\n", "import { HeaderCell, SortIcon } from '../components'\n// import ColumnResizer from '../table-column-resizer'\nimport { Alignment, SortOrder, oppositeOrderMap } from '../constants'\nimport { placeholderSign } from '../private'\nimport { componentToSlot, enforceUnit, tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { TableV2HeaderRowCellRendererParams } from '../components'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\nimport type { TableV2HeaderCell } from '../header-cell'\n\nexport type HeaderCellRendererProps = TableV2HeaderRowCellRendererParams &\n  UnwrapNestedRefs<Pick<UseTableReturn, 'onColumnSorted'>> &\n  Pick<TableV2Props, 'sortBy' | 'sortState' | 'headerCellProps'> & {\n    ns: UseNamespaceReturn\n  }\n\nconst HeaderCellRenderer: FunctionalComponent<HeaderCellRendererProps> = (\n  props,\n  { slots }\n) => {\n  const { column, ns, style, onColumnSorted } = props\n\n  const cellStyle = enforceUnit(style)\n\n  if (column.placeholderSign === placeholderSign) {\n    return (\n      <div class={ns.em('header-row-cell', 'placeholder')} style={cellStyle} />\n    )\n  }\n\n  const { headerCellRenderer, headerClass, sortable } = column\n\n  /**\n   * render Cell children\n   */\n\n  const cellProps = {\n    ...props,\n    class: ns.e('header-cell-text'),\n  }\n\n  const cellRenderer =\n    componentToSlot<typeof cellProps>(headerCellRenderer) ||\n    slots.default ||\n    ((props: TableV2HeaderCell) => <HeaderCell {...props} />)\n\n  const Cell = cellRenderer(cellProps)\n\n  /**\n   * Render cell container and sort indicator\n   */\n  const { sortBy, sortState, headerCellProps } = props\n\n  let sorting: boolean, sortOrder: SortOrder\n  if (sortState) {\n    const order = sortState[column.key]\n    sorting = Boolean(oppositeOrderMap[order])\n    sortOrder = sorting ? order : SortOrder.ASC\n  } else {\n    sorting = column.key === sortBy.key\n    sortOrder = sorting ? sortBy.order : SortOrder.ASC\n  }\n\n  const cellKls = [\n    ns.e('header-cell'),\n    tryCall(headerClass, props, ''),\n    column.align === Alignment.CENTER && ns.is('align-center'),\n    column.align === Alignment.RIGHT && ns.is('align-right'),\n    sortable && ns.is('sortable'),\n  ]\n\n  const cellWrapperProps = {\n    ...tryCall(headerCellProps, props),\n    onClick: column.sortable ? onColumnSorted : undefined,\n    class: cellKls,\n    style: cellStyle,\n    ['data-key']: column.key,\n  }\n\n  // For now we don't deliver resizable column feature since it has some UX issue.\n  return (\n    <div {...cellWrapperProps} role=\"columnheader\">\n      {Cell}\n\n      {sortable && (\n        <SortIcon\n          class={[ns.e('sort-icon'), sorting && ns.is('sorting')]}\n          sortOrder={sortOrder}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default HeaderCellRenderer\nexport type HeaderCellSlotProps = HeaderCellRendererProps & { class: string }\n", "import type { CSSProperties, FunctionalComponent } from 'vue'\n\ntype FooterRendererProps = {\n  class?: JSX.IntrinsicAttributes['class']\n  style: CSSProperties\n}\n\nconst Footer: FunctionalComponent<FooterRendererProps> = (props, { slots }) => {\n  return (\n    <div class={props.class} style={props.style}>\n      {slots.default?.()}\n    </div>\n  )\n}\n\nFooter.displayName = 'ElTableV2Footer'\n\nexport default Footer\n", "<template>\n  <svg\n    viewBox=\"0 0 79 86\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <defs>\n      <linearGradient\n        :id=\"`linearGradient-1-${id}`\"\n        x1=\"38.8503086%\"\n        y1=\"0%\"\n        x2=\"61.1496914%\"\n        y2=\"100%\"\n      >\n        <stop\n          :stop-color=\"`var(${ns.cssVarBlockName('fill-color-1')})`\"\n          offset=\"0%\"\n        />\n        <stop\n          :stop-color=\"`var(${ns.cssVarBlockName('fill-color-4')})`\"\n          offset=\"100%\"\n        />\n      </linearGradient>\n      <linearGradient\n        :id=\"`linearGradient-2-${id}`\"\n        x1=\"0%\"\n        y1=\"9.5%\"\n        x2=\"100%\"\n        y2=\"90.5%\"\n      >\n        <stop\n          :stop-color=\"`var(${ns.cssVarBlockName('fill-color-1')})`\"\n          offset=\"0%\"\n        />\n        <stop\n          :stop-color=\"`var(${ns.cssVarBlockName('fill-color-6')})`\"\n          offset=\"100%\"\n        />\n      </linearGradient>\n      <rect :id=\"`path-3-${id}`\" x=\"0\" y=\"0\" width=\"17\" height=\"36\" />\n    </defs>\n    <g\n      id=\"Illustrations\"\n      stroke=\"none\"\n      stroke-width=\"1\"\n      fill=\"none\"\n      fill-rule=\"evenodd\"\n    >\n      <g id=\"B-type\" transform=\"translate(-1268.000000, -535.000000)\">\n        <g id=\"Group-2\" transform=\"translate(1268.000000, 535.000000)\">\n          <path\n            id=\"Oval-Copy-2\"\n            d=\"M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z\"\n            :fill=\"`var(${ns.cssVarBlockName('fill-color-3')})`\"\n          />\n          <polygon\n            id=\"Rectangle-Copy-14\"\n            :fill=\"`var(${ns.cssVarBlockName('fill-color-7')})`\"\n            transform=\"translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) \"\n            points=\"13 58 53 58 42 45 2 45\"\n          />\n          <g\n            id=\"Group-Copy\"\n            transform=\"translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)\"\n          >\n            <polygon\n              id=\"Rectangle-Copy-10\"\n              :fill=\"`var(${ns.cssVarBlockName('fill-color-7')})`\"\n              transform=\"translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) \"\n              points=\"2.84078316e-14 3 18 3 23 7 5 7\"\n            />\n            <polygon\n              id=\"Rectangle-Copy-11\"\n              :fill=\"`var(${ns.cssVarBlockName('fill-color-5')})`\"\n              points=\"-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43\"\n            />\n            <rect\n              id=\"Rectangle-Copy-12\"\n              :fill=\"`url(#linearGradient-1-${id})`\"\n              transform=\"translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) \"\n              x=\"38\"\n              y=\"7\"\n              width=\"17\"\n              height=\"36\"\n            />\n            <polygon\n              id=\"Rectangle-Copy-13\"\n              :fill=\"`var(${ns.cssVarBlockName('fill-color-2')})`\"\n              transform=\"translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) \"\n              points=\"24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12\"\n            />\n          </g>\n          <rect\n            id=\"Rectangle-Copy-15\"\n            :fill=\"`url(#linearGradient-2-${id})`\"\n            x=\"13\"\n            y=\"45\"\n            width=\"40\"\n            height=\"36\"\n          />\n          <g id=\"Rectangle-Copy-17\" transform=\"translate(53.000000, 45.000000)\">\n            <use\n              id=\"Mask\"\n              :fill=\"`var(${ns.cssVarBlockName('fill-color-8')})`\"\n              transform=\"translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) \"\n              :xlink:href=\"`#path-3-${id}`\"\n            />\n            <polygon\n              id=\"Rectangle-Copy\"\n              :fill=\"`var(${ns.cssVarBlockName('fill-color-9')})`\"\n              :mask=\"`url(#mask-4-${id})`\"\n              transform=\"translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) \"\n              points=\"7 0 24 0 20 18 7 16.5\"\n            />\n          </g>\n          <polygon\n            id=\"Rectangle-Copy-18\"\n            :fill=\"`var(${ns.cssVarBlockName('fill-color-2')})`\"\n            transform=\"translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) \"\n            points=\"62 45 79 45 70 58 53 58\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useId, useNamespace } from '@element-plus/hooks'\n\ndefineOptions({\n  name: 'ImgEmpty',\n})\n\nconst ns = useNamespace('empty')\nconst id = useId()\n</script>\n", "import { buildProps } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const emptyProps = buildProps({\n  image: {\n    type: String,\n    default: '',\n  },\n  imageSize: Number,\n  description: {\n    type: String,\n    default: '',\n  },\n} as const)\n\nexport type EmptyProps = ExtractPropTypes<typeof emptyProps>\n", "<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('image')\" :style=\"imageStyle\">\n      <img v-if=\"image\" :src=\"image\" ondragstart=\"return false\" />\n      <slot v-else name=\"image\">\n        <img-empty />\n      </slot>\n    </div>\n    <div :class=\"ns.e('description')\">\n      <slot v-if=\"$slots.description\" name=\"description\" />\n      <p v-else>{{ emptyDescription }}</p>\n    </div>\n    <div v-if=\"$slots.default\" :class=\"ns.e('bottom')\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { addUnit } from '@element-plus/utils'\nimport ImgEmpty from './img-empty.vue'\nimport { emptyProps } from './empty'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElEmpty',\n})\n\nconst props = defineProps(emptyProps)\n\nconst { t } = useLocale()\nconst ns = useNamespace('empty')\nconst emptyDescription = computed(\n  () => props.description || t('el.table.emptyText')\n)\nconst imageStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.imageSize),\n}))\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Empty from './src/empty.vue'\n\nexport const ElEmpty = withInstall(Empty)\nexport default ElEmpty\n\nexport * from './src/empty'\nexport type { EmptyInstance } from './src/instance'\n", "import ElEmpty from '@element-plus/components/empty'\nimport type { CSSProperties, FunctionalComponent } from 'vue'\n\ntype EmptyRendererProps = {\n  class?: JSX.IntrinsicAttributes['class']\n  style?: CSSProperties\n}\n\nconst Footer: FunctionalComponent<EmptyRendererProps> = (props, { slots }) => {\n  return (\n    <div class={props.class} style={props.style}>\n      {slots.default ? slots.default() : <ElEmpty />}\n    </div>\n  )\n}\n\nFooter.displayName = 'ElTableV2Empty'\n\nexport default Footer\n", "import type { SimpleFunctionalComponent } from '../types'\n\nconst Overlay: SimpleFunctionalComponent = (props, { slots }) => {\n  return (\n    <div class={props.class} style={props.style}>\n      {slots.default?.()}\n    </div>\n  )\n}\n\nOverlay.displayName = 'ElTableV2Overlay'\n\nexport default Overlay\n", "// @ts-nocheck\nimport { defineComponent, provide, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useTable } from './use-table'\nimport { TableV2InjectionKey } from './tokens'\nimport { tableV2Props } from './table'\n// renderers\nimport MainTable from './renderers/main-table'\nimport LeftTable from './renderers/left-table'\nimport RightTable from './renderers/right-table'\nimport Row from './renderers/row'\nimport Cell from './renderers/cell'\nimport Header from './renderers/header'\nimport HeaderCell from './renderers/header-cell'\nimport Footer from './renderers/footer'\nimport Empty from './renderers/empty'\nimport Overlay from './renderers/overlay'\n\nimport type { TableGridRowSlotParams } from './table-grid'\nimport type { ScrollStrategy } from './composables/use-scrollbar'\nimport type {\n  TableV2HeaderRendererParams,\n  TableV2HeaderRowCellRendererParams,\n  TableV2RowCellRenderParam,\n} from './components'\n\nconst COMPONENT_NAME = 'ElTableV2'\n\nconst TableV2 = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2Props,\n  setup(props, { slots, expose }) {\n    const ns = useNamespace('table-v2')\n\n    const {\n      columnsStyles,\n      fixedColumnsOnLeft,\n      fixedColumnsOnRight,\n      mainColumns,\n      mainTableHeight,\n      fixedTableHeight,\n      leftTableWidth,\n      rightTableWidth,\n      data,\n      depthMap,\n      expandedRowKeys,\n      hasFixedColumns,\n      hoveringRowKey,\n      mainTableRef,\n      leftTableRef,\n      rightTableRef,\n      isDynamic,\n      isResetting,\n      isScrolling,\n\n      bodyWidth,\n      emptyStyle,\n      rootStyle,\n      headerWidth,\n      footerHeight,\n\n      showEmpty,\n\n      // exposes\n      scrollTo,\n      scrollToLeft,\n      scrollToTop,\n      scrollToRow,\n\n      getRowHeight,\n      onColumnSorted,\n      onRowHeightChange,\n      onRowHovered,\n      onRowExpanded,\n      onRowsRendered,\n      onScroll,\n      onVerticalScroll,\n    } = useTable(props)\n\n    expose({\n      /**\n       * @description scroll to a given position\n       * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n       */\n      scrollTo,\n      /**\n       * @description scroll to a given position horizontally\n       * @params scrollLeft {Number} where to scroll to.\n       */\n      scrollToLeft,\n      /**\n       * @description scroll to a given position vertically\n       * @params scrollTop { Number } where to scroll to.\n       */\n      scrollToTop,\n      /**\n       * @description scroll to a given row\n       * @params row {Number} which row to scroll to\n       * @params @optional strategy {ScrollStrategy} use what strategy to scroll to\n       */\n      scrollToRow,\n    })\n\n    provide(TableV2InjectionKey, {\n      ns,\n      isResetting,\n      hoveringRowKey,\n      isScrolling,\n    })\n\n    return () => {\n      const {\n        cache,\n        cellProps,\n        estimatedRowHeight,\n        expandColumnKey,\n        fixedData,\n        headerHeight,\n        headerClass,\n        headerProps,\n        headerCellProps,\n        sortBy,\n        sortState,\n        rowHeight,\n        rowClass,\n        rowEventHandlers,\n        rowKey,\n        rowProps,\n        scrollbarAlwaysOn,\n        indentSize,\n        iconSize,\n        useIsScrolling,\n        vScrollbarSize,\n        width,\n      } = props\n\n      const _data = unref(data)\n\n      const mainTableProps = {\n        cache,\n        class: ns.e('main'),\n        columns: unref(mainColumns),\n        data: _data,\n        fixedData,\n        estimatedRowHeight,\n        bodyWidth: unref(bodyWidth),\n        headerHeight,\n        headerWidth: unref(headerWidth),\n        height: unref(mainTableHeight),\n        mainTableRef,\n        rowKey,\n        rowHeight,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width,\n        getRowHeight,\n        onRowsRendered,\n        onScroll,\n      }\n\n      const leftColumnsWidth = unref(leftTableWidth)\n      const _fixedTableHeight = unref(fixedTableHeight)\n\n      const leftTableProps = {\n        cache,\n        class: ns.e('left'),\n        columns: unref(fixedColumnsOnLeft),\n        data: _data,\n        estimatedRowHeight,\n        leftTableRef,\n        rowHeight,\n        bodyWidth: leftColumnsWidth,\n        headerWidth: leftColumnsWidth,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        useIsScrolling,\n        width: leftColumnsWidth,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n\n      const rightColumnsWidth = unref(rightTableWidth)\n      const rightColumnsWidthWithScrollbar = rightColumnsWidth + vScrollbarSize\n\n      const rightTableProps = {\n        cache,\n        class: ns.e('right'),\n        columns: unref(fixedColumnsOnRight),\n        data: _data,\n        estimatedRowHeight,\n        rightTableRef,\n        rowHeight,\n        bodyWidth: rightColumnsWidthWithScrollbar,\n        headerWidth: rightColumnsWidthWithScrollbar,\n        headerHeight,\n        height: _fixedTableHeight,\n        rowKey,\n        scrollbarAlwaysOn,\n        scrollbarStartGap: 2,\n        scrollbarEndGap: vScrollbarSize,\n        width: rightColumnsWidthWithScrollbar,\n        style: `--${unref(\n          ns.namespace\n        )}-table-scrollbar-size: ${vScrollbarSize}px`,\n        useIsScrolling,\n        getRowHeight,\n        onScroll: onVerticalScroll,\n      }\n      const _columnsStyles = unref(columnsStyles)\n\n      const tableRowProps = {\n        ns,\n        depthMap: unref(depthMap),\n        columnsStyles: _columnsStyles,\n        expandColumnKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        estimatedRowHeight,\n        hasFixedColumns: unref(hasFixedColumns),\n        hoveringRowKey: unref(hoveringRowKey),\n        rowProps,\n        rowClass,\n        rowKey,\n        rowEventHandlers,\n        onRowHovered,\n        onRowExpanded,\n        onRowHeightChange,\n      }\n\n      const tableCellProps = {\n        cellProps,\n        expandColumnKey,\n        indentSize,\n        iconSize,\n        rowKey,\n        expandedRowKeys: unref(expandedRowKeys),\n        ns,\n      }\n\n      const tableHeaderProps = {\n        ns,\n        headerClass,\n        headerProps,\n        columnsStyles: _columnsStyles,\n      }\n\n      const tableHeaderCellProps = {\n        ns,\n\n        sortBy,\n        sortState,\n        headerCellProps,\n        onColumnSorted,\n      }\n\n      const tableSlots = {\n        row: (props: TableGridRowSlotParams) => (\n          <Row {...props} {...tableRowProps}>\n            {{\n              row: slots.row,\n              cell: (props: TableV2RowCellRenderParam) =>\n                slots.cell ? (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots.cell(props)}\n                  </Cell>\n                ) : (\n                  <Cell\n                    {...props}\n                    {...tableCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Row>\n        ),\n        header: (props: TableV2HeaderRendererParams) => (\n          <Header {...props} {...tableHeaderProps}>\n            {{\n              header: slots.header,\n              cell: (props: TableV2HeaderRowCellRendererParams) =>\n                slots['header-cell'] ? (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  >\n                    {slots['header-cell'](props)}\n                  </HeaderCell>\n                ) : (\n                  <HeaderCell\n                    {...props}\n                    {...tableHeaderCellProps}\n                    style={_columnsStyles[props.column.key]}\n                  />\n                ),\n            }}\n          </Header>\n        ),\n      }\n\n      const rootKls = [\n        props.class,\n        ns.b(),\n        ns.e('root'),\n        {\n          [ns.is('dynamic')]: unref(isDynamic),\n        },\n      ]\n\n      const footerProps = {\n        class: ns.e('footer'),\n        style: unref(footerHeight),\n      }\n\n      return (\n        <div class={rootKls} style={unref(rootStyle)}>\n          <MainTable {...mainTableProps}>{tableSlots}</MainTable>\n          <LeftTable {...leftTableProps}>{tableSlots}</LeftTable>\n          <RightTable {...rightTableProps}>{tableSlots}</RightTable>\n          {slots.footer && (\n            <Footer {...footerProps}>{{ default: slots.footer }}</Footer>\n          )}\n          {unref(showEmpty) && (\n            <Empty class={ns.e('empty')} style={unref(emptyStyle)}>\n              {{ default: slots.empty }}\n            </Empty>\n          )}\n          {slots.overlay && (\n            <Overlay class={ns.e('overlay')}>\n              {{ default: slots.overlay }}\n            </Overlay>\n          )}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableV2\n\nexport type TableV2Instance = InstanceType<typeof TableV2> & {\n  /**\n   * @description scroll to a given position\n   * @params params {{ scrollLeft?: number, scrollTop?: number }} where to scroll to.\n   */\n  scrollTo: (param: { scrollLeft?: number; scrollTop?: number }) => void\n  /**\n   * @description scroll to a given position horizontally\n   * @params scrollLeft {Number} where to scroll to.\n   */\n  scrollToLeft: (scrollLeft: number) => void\n  /**\n   * @description scroll to a given position vertically\n   * @params scrollTop { Number } where to scroll to.\n   */\n  scrollToTop: (scrollTop: number) => void\n  /**\n   * @description scroll to a given row\n   * @params row {Number} which row to scroll to\n   * @params strategy {ScrollStrategy} use what strategy to scroll to\n   */\n  scrollToRow(row: number, strategy?: ScrollStrategy): void\n}\n", "import { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\ntype AutoResizeHandler = (event: { height: number; width: number }) => void\n\nexport const autoResizerProps = buildProps({\n  disableWidth: Boolean,\n  disableHeight: Boolean,\n  onResize: {\n    type: definePropType<AutoResizeHandler>(Function),\n  },\n} as const)\n\nexport type AutoResizerProps = ExtractPropTypes<typeof autoResizerProps>\n", "import { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { autoResizerProps } from '../auto-resizer'\nimport { useAutoResize } from '../composables'\n\nconst AutoResizer = defineComponent({\n  name: 'ElAutoResizer',\n  props: autoResizerProps,\n  setup(props, { slots }) {\n    const ns = useNamespace('auto-resizer')\n    const { height, width, sizer } = useAutoResize(props)\n    const style = {\n      width: '100%',\n      height: '100%',\n    }\n\n    return () => {\n      return (\n        <div ref={sizer} class={ns.b()} style={style}>\n          {slots.default?.({\n            height: height.value,\n            width: width.value,\n          })}\n        </div>\n      )\n    }\n  },\n})\n\nexport default AutoResizer\n", "import { withInstall } from '@element-plus/utils'\nimport TableV2 from './src/table-v2'\nimport AutoResizer from './src/components/auto-resizer'\n\nexport {\n  Alignment as TableV2Alignment,\n  FixedDir as TableV2FixedDir,\n  SortOrder as TableV2SortOrder,\n} from './src/constants'\nexport { default as TableV2 } from './src/table-v2'\nexport * from './src/auto-resizer'\nexport { placeholderSign as TableV2Placeholder } from './src/private'\n\nexport const ElTableV2 = withInstall(TableV2)\nexport const ElAutoResizer = withInstall(AutoResizer)\n\nexport type {\n  Column,\n  Columns,\n  SortBy,\n  SortState,\n  TableV2CustomizedHeaderSlotParam,\n} from './src/types'\nexport type { TableV2Instance } from './src/table-v2'\nexport * from './src/table'\nexport * from './src/row'\n\nexport type { HeaderCellSlotProps } from './src/renderers/header-cell'\n"],
  "mappings": "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",
  "names": ["column", "columns", "column", "rowKey", "rowKey", "expandColumnKey", "total", "column", "columns", "rowKey", "isEqual", "cache", "layout", "layout", "getOffset", "getEstimatedTotalSize", "total", "cache", "direction", "itemSize", "layout", "window", "initScrollOffset", "Scrollbar", "buildList", "itemSize", "total", "layout", "itemSize", "total", "estimatedItemSize", "layout", "cache", "getEstimatedTotalHeight", "getEstimatedTotalWidth", "cache", "onUpdated", "direction", "Scrollbar", "column", "SCOPE", "SCOPE", "getItemFromCache", "bs", "es", "total", "findItem", "cache", "column", "slots", "cellData", "style", "props", "displayText", "toString", "_createVNode", "class", "default", "TableV2Cell", "displayName", "slots", "props", "_createVNode", "column", "HeaderCell", "inheritAttrs", "TableV2HeaderRow", "defineComponent", "name", "props", "tableV2HeaderRowProps", "slots", "columns", "columnsStyles", "headerIndex", "style", "column", "Cells", "map", "columnIndex", "header", "cells", "node", "COMPONENT_NAME", "TableV2Header", "defineComponent", "name", "props", "tableV2HeaderProps", "slots", "expose", "ns", "headerRef", "ref", "width", "height", "computed", "ensureArray", "headerHeights", "scrollToLeft", "nextTick", "headerEl", "left", "renderFixedRows", "rowHeight", "fixedHeaderData", "style", "class", "columns", "rowData", "rowIndex", "renderDynamicRows", "unref", "headerIndex", "_createVNode", "headerStyle", "useTableRow", "isScrolling", "inject", "TableV2InjectionKey", "measured", "rowRef", "doMeasure", "columns", "onRowHeightChange", "rowKey", "rowIndex", "style", "height", "$rowRef", "getBoundingClientRect", "value", "nextTick", "firstColumn", "placeholderSign", "rowData", "onRowHover", "handlers", "props", "rowEventHandlers", "eventHandlers", "Object", "forEach", "eventName", "isFunction", "handler", "event", "name", "hovered", "onExpand", "onRowExpand", "onMounted", "COMPONENT_NAME", "TableV2Row", "attrs", "measurable", "expose", "column", "expandColumnKey", "ColumnCells", "expandable", "slots", "depth", "unref", "cells", "isArray", "node", "_createVNode", "_mergeProps", "SortIcon", "sortOrder", "_createVNode", "ExpandIcon", "expanded", "expandable", "onExpand", "style", "size", "onClick", "_createVNode", "_mergeProps", "COMPONENT_NAME", "useTableGrid", "props", "headerRef", "ref", "bodyRef", "data", "rowHeight", "estimatedRowHeight", "headerHeight", "gridHeight", "height", "Math", "max", "unref", "hasHeader", "itemKey", "rowIndex", "rowCacheStart", "rowCacheEnd", "rowVisibleEnd", "header$", "scrollToLeft", "scrollLeft", "scrollTop", "scrollToTop", "row", "scrollToItem", "forceUpdate", "fixedRowHeight", "totalHeight", "scrollToRow", "TableGrid", "expose", "ns", "inject", "onItemRendered", "resetAfterRowIndex", "scrollTo", "cache", "columns", "fixedData", "useIsScrolling", "scrollbarAlwaysOn", "scrollbarEndGap", "scrollbarStartGap", "style", "bodyWidth", "headerWidth", "getRowHeight", "onScroll", "Grid", "_headerHeight", "_createVNode", "Header", "isDynamicRowEnabled", "MainTable", "slots", "rest", "mainTableRef", "LeftTable", "slots", "leftTableRef", "rest", "_createVNode", "Table", "_mergeProps", "LeftTable", "slots", "rightTableRef", "rest", "_createVNode", "Table", "_mergeProps", "RowRenderer", "slots", "columns", "columnsStyles", "depthMap", "expandColumnKey", "expandedRowKeys", "estimatedRowHeight", "hasFixedColumns", "hoveringRowKey", "rowData", "rowIndex", "style", "isScrolling", "rowProps", "rowClass", "rowKey", "rowEventHandlers", "ns", "onRowExpanded", "_rowKey", "depth", "canExpand", "Boolean", "isFixedRow", "kls", "e", "is", "class", "_createVNode", "Row", "_mergeProps", "CellRenderer", "column", "columns", "columnIndex", "depth", "expandIconProps", "isScrolling", "rowData", "rowIndex", "style", "expandedRowKeys", "ns", "cellProps", "indentSize", "rowKey", "slots", "_createVNode", "TableCell", "dataKey", "dataGetter", "cellData", "extraCellProps", "class", "expandColumnKey", "_mergeProps", "kls", "e", "expandable", "expanded", "iconStyle", "IconOrPlaceholder", "iconSize", "HeaderRenderer", "columns", "columnsStyles", "headerIndex", "style", "headerProps", "ns", "slots", "kls", "extraProps", "class", "_createVNode", "HeaderRow", "_isSlot", "enforceUnit", "HeaderCellRenderer", "slots", "column", "ns", "onColumnSorted", "props", "_createVNode", "cellStyle", "headerClass", "sortable", "class", "headerCellProps", "sorting", "oppositeOrderMap", "order", "sortOrder", "sortBy", "slots", "_createVNode", "props", "class", "style", "default", "slots", "_createVNode", "props", "class", "style", "Footer", "slots", "_createVNode", "props", "class", "style", "default", "Empty", "Overlay", "_isVNode", "COMPONENT_NAME", "TableV2", "name", "props", "expose", "columnsStyles", "fixedColumnsOnLeft", "fixedColumnsOnRight", "mainColumns", "mainTableHeight", "fixedTableHeight", "leftTableWidth", "rightTableWidth", "data", "depthMap", "expandedRowKeys", "hasFixedColumns", "hoveringRowKey", "mainTableRef", "leftTableRef", "rightTableRef", "isDynamic", "isResetting", "isScrolling", "bodyWidth", "emptyStyle", "rootStyle", "headerWidth", "footerHeight", "showEmpty", "scrollTo", "scrollToLeft", "scrollToTop", "scrollToRow", "getRowHeight", "onColumnSorted", "onRowExpanded", "onRowsRendered", "onScroll", "onVerticalScroll", "useTable", "cache", "expandColumnKey", "rowKey", "cellProps", "estimatedRowHeight", "fixedData", "headerHeight", "headerClass", "headerProps", "headerCellProps", "sortBy", "sortState", "rowHeight", "rowClass", "rowEventHandlers", "rowProps", "scrollbarAlwaysOn", "indentSize", "iconSize", "useIsScrolling", "width", "class", "columns", "height", "scrollbarStartGap", "scrollbarEndGap", "style", "tableRowProps", "ns", "unref", "_createVNode", "Cell", "_mergeProps", "_isSlot", "onRowHeightChange", "Header", "HeaderCell", "_columnsStyles", "row", "cell", "header", "slots", "AutoResizer", "defineComponent", "name", "props", "autoResizerProps", "slots", "ns", "height", "width", "sizer", "useAutoResize", "_createVNode", "b", "style", "default", "value"]
}
